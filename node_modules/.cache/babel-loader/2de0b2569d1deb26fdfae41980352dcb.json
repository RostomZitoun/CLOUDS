{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"C:/Users/Majed/Desktop/lib/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Majed/Desktop/lib/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Majed/Desktop/lib/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Majed/Desktop/lib/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import CovidSummary from'./CovidSummary';import CovidPie from'./CovidPie';import DailyCovid from'./DailyCovid';import CovidGraph from'./CovidGraph';var CountryPage=/*#__PURE__*/function(_React$Component){_inherits(CountryPage,_React$Component);var _super=_createSuper(CountryPage);function CountryPage(){_classCallCheck(this,CountryPage);return _super.call(this);}_createClass(CountryPage,[{key:\"countryName\",value:function countryName(name){return name.split('-').map(function(x){return x[0].toUpperCase()+x.slice(1);}).join(' ');}},{key:\"render\",value:function render(){var country=this.props.match.params.country;console.log(country);return/*#__PURE__*/_jsxs(\"div\",{class:\"country page\",children:[/*#__PURE__*/_jsx(CovidSummary,{title:\"Coronavirus Summary In \"+this.countryName(country),load:function load(){return fetch('https://api.covid19api.com/summary');},extract:function extract(resp){var countries=resp.Countries;for(var i=0;i<countries.length;i++){if(countries[i].Slug==country)break;}if(i==countries.Slug)return null;//won't render\nreturn countries[i];}}),/*#__PURE__*/_jsx(CovidPie,{title:\"Coronavirus Cases Distribution In \"+this.countryName(country),name:country,load:function load(){return fetch(\"https://api.covid19api.com/summary\");},extract:function extract(resp){var countries=resp.Countries;for(var i=0;i<countries.length;i++){if(countries[i].Slug==country)break;}if(i==countries.Slug)return null;//won't render\nconsole.log(countries[i]);return[{label:\"Dead Cases\",count:countries[i].TotalDeaths},{label:\"Recovered Cases\",count:countries[i].TotalRecovered},{label:\"Active Cases\",count:countries[i].TotalConfirmed-countries[i].TotalRecovered}];}}),/*#__PURE__*/_jsx(DailyCovid,{title:\"Daily Coronavirus Cases In \"+this.countryName(country),name:country,load:function load(){return fetch(\"https://api.covid19api.com/total/country/\"+country);},extract:function extract(resp){resp=resp.slice(-8);for(var i=7;i>=1;i--){resp[i].Deaths-=resp[i-1].Deaths;resp[i].Confirmed-=resp[i-1].Confirmed;resp[i].Recovered-=resp[i-1].Recovered;}return resp.slice(-7);}}),/*#__PURE__*/_jsx(CovidGraph,{title:\"Total Coronavirus Cases In \"+this.countryName(country),name:\"france\",load:function load(){return fetch(\"https://api.covid19api.com/total/country/\"+country);},extract:function extract(resp){return resp;}})]});}}]);return CountryPage;}(React.Component);export{CountryPage as default};","map":{"version":3,"sources":["C:/Users/Majed/Desktop/lib/covidapp/src/components/CountryPage.js"],"names":["React","CovidSummary","CovidPie","DailyCovid","CovidGraph","CountryPage","name","split","map","x","toUpperCase","slice","join","country","props","match","params","console","log","countryName","fetch","resp","countries","Countries","i","length","Slug","label","count","TotalDeaths","TotalRecovered","TotalConfirmed","Deaths","Confirmed","Recovered","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport CovidSummary from './CovidSummary';\r\nimport CovidPie from './CovidPie';\r\nimport DailyCovid from './DailyCovid';\r\nimport CovidGraph from './CovidGraph';\r\n\r\nexport default class CountryPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    countryName(name) {\r\n        return name.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\r\n    }\r\n\r\n    render() {\r\n        let country = this.props.match.params.country;\r\n        console.log(country)\r\n        return (\r\n            <div class=\"country page\">\r\n                <CovidSummary title={\"Coronavirus Summary In \" + this.countryName(country)} load={() => fetch('https://api.covid19api.com/summary')} extract={(resp) => {\r\n                    let countries = resp.Countries;\r\n                    for ( var i = 0; i < countries.length; i++ )\r\n                        if ( countries[i].Slug == country )\r\n                            break;\r\n                    \r\n                    if ( i == countries.Slug )\r\n                        return null; //won't render\r\n                    return countries[i];\r\n                }}/>\r\n\r\n                <CovidPie title={\"Coronavirus Cases Distribution In \" + this.countryName(country)} name={country} load={() => fetch(\"https://api.covid19api.com/summary\")} extract={resp => {\r\n                    let countries = resp.Countries;\r\n                    for ( var i = 0; i < countries.length; i++ )\r\n                        if ( countries[i].Slug == country )\r\n                            break;\r\n                    \r\n                    if ( i == countries.Slug )\r\n                        return null; //won't render\r\n\r\n                    console.log(countries[i]);\r\n                    return [\r\n                        {label: \"Dead Cases\", count: countries[i].TotalDeaths},\r\n                        {label: \"Recovered Cases\", count: countries[i].TotalRecovered},\r\n                        {label: \"Active Cases\", count: countries[i].TotalConfirmed - countries[i].TotalRecovered}\r\n                    ];\r\n                }}/>\r\n\r\n                <DailyCovid title={\"Daily Coronavirus Cases In \" + this.countryName(country)} name={country} load={() => fetch(\"https://api.covid19api.com/total/country/\" + country)} extract={resp => {\r\n                    resp = resp.slice(-8);\r\n                    for ( let i = 7; i >= 1; i-- ) {\r\n                        resp[i].Deaths -= resp[i-1].Deaths;\r\n                        resp[i].Confirmed -= resp[i-1].Confirmed;\r\n                        resp[i].Recovered -= resp[i-1].Recovered;\r\n                    }\r\n                    return resp.slice(-7);\r\n                }}/>\r\n\r\n                <CovidGraph title={\"Total Coronavirus Cases In \" + this.countryName(country)} name=\"france\" load={() => fetch(\"https://api.covid19api.com/total/country/\" + country)} extract={resp => {\r\n                    return resp;\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}