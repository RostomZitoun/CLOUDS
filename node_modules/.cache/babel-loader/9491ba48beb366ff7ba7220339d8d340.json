{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"C:/Users/Majed/Desktop/lib/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Majed/Desktop/lib/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Majed/Desktop/lib/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Majed/Desktop/lib/covidapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./CovidGraph.css';var _window=window,am4core=_window.am4core,am4charts=_window.am4charts;var CovidGraph=/*#__PURE__*/function(_React$Component){_inherits(CovidGraph,_React$Component);var _super=_createSuper(CovidGraph);function CovidGraph(){var _this;_classCallCheck(this,CovidGraph);_this=_super.call(this);_this.state={am4chart:false,data:null};return _this;}_createClass(CovidGraph,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){return!(nextState.data==null);}},{key:\"UNSAFE__componentWillUpdate\",value:function UNSAFE__componentWillUpdate(){if(this.state.am4chart)this.state.am4chart.dispose();}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;am4core.ready(function(){am4core.useTheme(function(target){target.list=[am4core.color(\"#c44569\"),am4core.color(\"#546de5\"),am4core.color(\"#f5cd79\")];});var chart=am4core.create(\"covidgraph_\"+_this2.props.name,am4charts.XYChart);var xAxis=chart.xAxes.push(new am4charts.DateAxis());var yAxis=chart.yAxes.push(new am4charts.ValueAxis());xAxis.renderer.labels.template.fill=am4core.color(\"#fff\");yAxis.renderer.labels.template.fill=am4core.color(\"#fff\");var createSeries=function createSeries(field,name){var opposite=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var series=chart.series.push(new am4charts.LineSeries());series.dataFields.valueY=field;series.dataFields.dateX=\"Date\";series.strokeWidth=4;series.yAxis=yAxis;series.name=name;series.tooltipText=\"{name}: [bold]{valueY}[/]\";series.fillOpacity=0.1;// valueAxis.renderer.line.disabled = true; //disables axis line\n// valueAxis.renderer.labels.template.disabled = true; //disables labels\n// valueAxis.renderer.grid.template.disabled = true;  //disables grid\n// valueAxis.cursorTooltipEnabled = false;\n};createSeries(\"Deaths\",\"Total Deaths\");createSeries(\"Recovered\",\"Total Recovered\");createSeries(\"Confirmed\",\"Total Cases\");chart.legend=new am4charts.Legend();chart.legend.position='top';chart.legend.markers.template.width=chart.legend.markers.template.height=20;chart.legend.fontSize=12;chart.legend.labels.template.fill=am4core.color('#fff');chart.legend.valueLabels.template.fill=am4core.color('#fff');chart.cursor=new am4charts.XYCursor();chart.cursor.xAxis=xAxis;chart.cursor.fullWidthLineX=true;chart.cursor.lineX.fill=am4core.color(\"#fff\");chart.cursor.lineX.fillOpacity=0.2;_this2.setState({am4chart:chart},function(){if(_this2.state.data)chart.data=_this2.state.data;});});var execute=function execute(resp){var data=_this2.props.extract(resp);_this2.setState({data:data},function(){if(_this2.state.am4chart){var chart=_this2.state.am4chart;chart.data=data;}});};var retry=function retry(){_this2.props.load().then(function(resp){return resp.json();}).then(execute).catch(function(err){return retry;});};retry();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"grey header\",children:this.props.title}),/*#__PURE__*/_jsxs(\"table\",{className:\"summary\",children:[/*#__PURE__*/_jsx(\"tbody\",{style:{display:!this.state.data?\"none\":\"table\"},children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{className:\"covidgraph\",id:\"covidgraph_\"+this.props.name})})}),this.state.data==null?/*#__PURE__*/_jsx(\"tbody\",{className:\"full\",children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{})]})})})}):null]})]});}}]);return CovidGraph;}(React.Component);export{CovidGraph as default};","map":{"version":3,"sources":["C:/Users/Majed/Desktop/lib/covidapp/src/components/CovidGraph.js"],"names":["React","window","am4core","am4charts","CovidGraph","state","am4chart","data","nextProps","nextState","dispose","ready","useTheme","target","list","color","chart","create","props","name","XYChart","xAxis","xAxes","push","DateAxis","yAxis","yAxes","ValueAxis","renderer","labels","template","fill","createSeries","field","opposite","series","LineSeries","dataFields","valueY","dateX","strokeWidth","tooltipText","fillOpacity","legend","Legend","position","markers","width","height","fontSize","valueLabels","cursor","XYCursor","fullWidthLineX","lineX","setState","execute","resp","extract","retry","load","then","json","catch","err","title","display","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './CovidGraph.css';\r\nlet {am4core, am4charts} = window;\r\n\r\nexport default class CovidGraph extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {am4chart: false, data: null};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return !(nextState.data == null);\r\n    }\r\n\r\n    UNSAFE__componentWillUpdate() {\r\n        if ( this.state.am4chart )\r\n            this.state.am4chart.dispose();\r\n    } \r\n\r\n    componentDidMount() {\r\n        am4core.ready(() => {\r\n            am4core.useTheme(target => {\r\n                target.list = [\r\n                    am4core.color(\"#c44569\"),\r\n                    am4core.color(\"#546de5\"),\r\n                    am4core.color(\"#f5cd79\")\r\n                ];\r\n            });\r\n\r\n            let chart = am4core.create(\"covidgraph_\" + this.props.name, am4charts.XYChart);\r\n            let xAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n            let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n            xAxis.renderer.labels.template.fill = am4core.color(\"#fff\");\r\n            yAxis.renderer.labels.template.fill = am4core.color(\"#fff\");\r\n\r\n            let  createSeries = (field, name, opposite=true) => {\r\n                let series = chart.series.push(new am4charts.LineSeries());\r\n                series.dataFields.valueY = field;\r\n                series.dataFields.dateX = \"Date\";\r\n                series.strokeWidth = 4;\r\n                series.yAxis = yAxis;\r\n                series.name = name;\r\n                series.tooltipText = \"{name}: [bold]{valueY}[/]\";\r\n                series.fillOpacity = 0.1;\r\n\r\n                // valueAxis.renderer.line.disabled = true; //disables axis line\r\n                // valueAxis.renderer.labels.template.disabled = true; //disables labels\r\n                // valueAxis.renderer.grid.template.disabled = true;  //disables grid\r\n                // valueAxis.cursorTooltipEnabled = false;\r\n            }\r\n\r\n            createSeries(\"Deaths\", \"Total Deaths\");\r\n            createSeries(\"Recovered\", \"Total Recovered\");\r\n            createSeries(\"Confirmed\", \"Total Cases\");\r\n\r\n            chart.legend = new am4charts.Legend();\r\n            chart.legend.position = 'top';\r\n            chart.legend.markers.template.width = chart.legend.markers.template.height = 20;\r\n            chart.legend.fontSize = 12;\r\n            chart.legend.labels.template.fill = am4core.color('#fff');\r\n            chart.legend.valueLabels.template.fill = am4core.color('#fff');\r\n            \r\n            chart.cursor = new am4charts.XYCursor();\r\n            chart.cursor.xAxis = xAxis;\r\n            chart.cursor.fullWidthLineX = true;\r\n            chart.cursor.lineX.fill = am4core.color(\"#fff\");\r\n            chart.cursor.lineX.fillOpacity = 0.2;\r\n            \r\n            this.setState({am4chart: chart}, () => {\r\n                if ( this.state.data )\r\n                    chart.data = this.state.data;\r\n            });\r\n        });\r\n\r\n\r\n        let execute = (resp) => {\r\n            let data = this.props.extract(resp);\r\n\r\n            this.setState({\r\n                data\r\n            }, () => {\r\n                if ( this.state.am4chart ) {\r\n                    let chart = this.state.am4chart;\r\n                    chart.data = data;\r\n                }\r\n            });\r\n        };\r\n\r\n        let retry = () => {\r\n            this.props.load().then(\r\n                resp => resp.json()\r\n            ).then(\r\n                execute\r\n            ).catch(err => retry);\r\n        }; retry();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"grey header\">{this.props.title}</h1>\r\n                <table className=\"summary\">\r\n                    <tbody style={{display: !this.state.data ? \"none\" : \"table\"}}>\r\n                        <tr><td className=\"covidgraph\" id={\"covidgraph_\" + this.props.name}>\r\n                        </td></tr>\r\n                    </tbody>\r\n\r\n                    {this.state.data == null ?\r\n                        <tbody className=\"full\">\r\n                        <tr><td>\r\n                                <div className=\"loading\">\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                </div>\r\n                            </td></tr>\r\n                        </tbody>\r\n                        :\r\n                        null\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}