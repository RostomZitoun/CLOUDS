{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Majed\\\\Desktop\\\\covidapp\\\\src\\\\components\\\\DailyCovid.js\";\nimport React from 'react';\nimport './DailyCovid.css';\nlet {\n  am4core,\n  am4charts\n} = window;\nexport default class DailyCovid extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      am4chart: false,\n      data: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.data == null) return true;\n    return false;\n  }\n\n  componentDidMount() {\n    var _s = $RefreshSig$();\n\n    am4core.ready(_s(() => {\n      _s();\n\n      //create chart\n      am4core.useTheme(target => {\n        target.list = [am4core.color(\"#c44569\"), am4core.color(\"#546de5\"), am4core.color(\"#f5cd79\")];\n      });\n      let chart = am4core.create(\"covidxycluster\" + this.props.name, am4charts.XYChart);\n      chart.legend = new am4charts.Legend();\n      chart.legend.position = 'bottom';\n      chart.legend.markers.template.width = chart.legend.markers.template.height = 10;\n      chart.legend.fontSize = 12;\n      let marker = chart.legend.markers.template.children.getIndex(0);\n      chart.legend.labels.template.fill = am4core.color('#fff');\n      chart.legend.valueLabels.template.fill = am4core.color('#fff');\n      marker.cornerRadius(3, 3, 3, 3);\n      let xAxis = chart.xAxes.push(new am4charts.DateAxis());\n      xAxis.dataFields.category = 'day';\n      xAxis.renderer.cellStartLocation = 0;\n      xAxis.renderer.cellEndLocation = 1;\n      xAxis.renderer.grid.template.location = 0;\n      xAxis.renderer.labels.template.fill = am4core.color(\"#fff\");\n      let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      yAxis.renderer.labels.template.fill = am4core.color(\"#fff\");\n      yAxis.min = 0;\n\n      let createSeries = (value, name) => {\n        let series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueY = value;\n        series.dataFields.dateX = 'Date';\n        series.name = name;\n        series.tooltipText = \"{valueY}\";\n        return series;\n      };\n\n      createSeries('Deaths', 'Total Deaths');\n      createSeries('Recovered', 'Total Recovered');\n      createSeries('Confirmed', 'Total Confirmed');\n      chart.cursor = new am4charts.XYCursor();\n      window.cursor = chart.cursor;\n      chart.cursor.xAxis = xAxis;\n      chart.cursor.fullWidthLineX = true;\n      chart.cursor.lineX.fill = am4core.color(\"#fff\");\n      chart.cursor.lineX.fillOpacity = 0.2;\n      xAxis.cursorTooltipEnabled = false;\n      this.setState({\n        am4chart: chart\n      }, () => {\n        if (this.state.data) {\n          chart.data = this.state.data;\n        }\n      });\n    }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n      return [am4core.useTheme];\n    }));\n\n    let execute = resp => {\n      let data = this.props.extract(resp);\n      this.setState({\n        data\n      }, () => {\n        if (this.state.am4chart) {\n          let chart = this.state.am4chart;\n          chart.data = data;\n        }\n      });\n    };\n\n    let retry = () => {\n      this.props.load().then(resp => resp.json()).then(execute).catch(err => retry);\n    };\n\n    retry();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"grey header\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n          style: {\n            display: !this.state.data ? \"none\" : \"table\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"covidxycluster\",\n              id: \"covidxycluster\" + this.props.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), this.state.data == null ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"full\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Majed/Desktop/covidapp/src/components/DailyCovid.js"],"names":["React","am4core","am4charts","window","DailyCovid","Component","constructor","state","am4chart","data","shouldComponentUpdate","nextProps","nextState","componentDidMount","ready","useTheme","target","list","color","chart","create","props","name","XYChart","legend","Legend","position","markers","template","width","height","fontSize","marker","children","getIndex","labels","fill","valueLabels","cornerRadius","xAxis","xAxes","push","DateAxis","dataFields","category","renderer","cellStartLocation","cellEndLocation","grid","location","yAxis","yAxes","ValueAxis","min","createSeries","value","series","ColumnSeries","valueY","dateX","tooltipText","cursor","XYCursor","fullWidthLineX","lineX","fillOpacity","cursorTooltipEnabled","setState","execute","resp","extract","retry","load","then","json","catch","err","render","title","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport './DailyCovid.css';\r\n\r\nlet {am4core, am4charts} = window;\r\n\r\nexport default class DailyCovid extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {am4chart: false, data: null};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if ( this.state.data == null )\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        am4core.ready(() => {\r\n            //create chart\r\n            am4core.useTheme(target => {\r\n                target.list = [\r\n                    am4core.color(\"#c44569\"),\r\n                    am4core.color(\"#546de5\"),\r\n                    am4core.color(\"#f5cd79\")\r\n                ];\r\n            });\r\n            let chart = am4core.create(\"covidxycluster\" + this.props.name, am4charts.XYChart);\r\n            chart.legend = new am4charts.Legend()\r\n            chart.legend.position = 'bottom'\r\n            chart.legend.markers.template.width = chart.legend.markers.template.height = 10;\r\n            chart.legend.fontSize = 12;\r\n            let marker = chart.legend.markers.template.children.getIndex(0);\r\n            chart.legend.labels.template.fill = am4core.color('#fff');\r\n            chart.legend.valueLabels.template.fill = am4core.color('#fff');\r\n            marker.cornerRadius(3, 3, 3, 3);\r\n\r\n            let xAxis = chart.xAxes.push(new am4charts.DateAxis())\r\n            xAxis.dataFields.category = 'day'\r\n            xAxis.renderer.cellStartLocation = 0;\r\n            xAxis.renderer.cellEndLocation = 1;\r\n            xAxis.renderer.grid.template.location = 0;\r\n            xAxis.renderer.labels.template.fill = am4core.color(\"#fff\");\r\n\r\n            let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n            yAxis.renderer.labels.template.fill = am4core.color(\"#fff\");\r\n            yAxis.min = 0;\r\n\r\n            let createSeries = (value, name) => {\r\n                let series = chart.series.push(new am4charts.ColumnSeries())\r\n                series.dataFields.valueY = value;\r\n                series.dataFields.dateX = 'Date';\r\n                series.name = name;\r\n                series.tooltipText = \"{valueY}\";\r\n            \r\n                return series;\r\n            }\r\n\r\n            createSeries('Deaths', 'Total Deaths');\r\n            createSeries('Recovered', 'Total Recovered');\r\n            createSeries('Confirmed', 'Total Confirmed');\r\n            chart.cursor = new am4charts.XYCursor();\r\n            window.cursor = chart.cursor;\r\n\r\n            chart.cursor.xAxis = xAxis;\r\n            chart.cursor.fullWidthLineX = true;\r\n            chart.cursor.lineX.fill = am4core.color(\"#fff\");\r\n            chart.cursor.lineX.fillOpacity = 0.2;\r\n            xAxis.cursorTooltipEnabled = false;\r\n\r\n            this.setState({am4chart: chart}, () => {\r\n                if ( this.state.data ) { \r\n                    chart.data = this.state.data;\r\n                } \r\n            });           \r\n        });\r\n\r\n        let execute = (resp) => {\r\n            let data = this.props.extract(resp);\r\n\r\n            this.setState({\r\n                data\r\n            }, () => {\r\n                if ( this.state.am4chart ) {\r\n                    let chart = this.state.am4chart;\r\n                    chart.data = data;\r\n                }\r\n            });\r\n        };\r\n\r\n        let retry = () => {\r\n            this.props.load().then(\r\n                resp => resp.json()\r\n            ).then(\r\n                execute\r\n            ).catch(err => retry);\r\n        }; retry();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"grey header\">{this.props.title}</h1>\r\n                <table className=\"summary\">\r\n                    <tbody style={{display: !this.state.data ? \"none\" : \"table\"}}>\r\n                        <tr><td className=\"covidxycluster\" id={\"covidxycluster\" + this.props.name}>\r\n                        </td></tr>\r\n                    </tbody>\r\n\r\n                    {this.state.data == null ?\r\n                        <tbody className=\"full\">\r\n                        <tr><td>\r\n                                <div className=\"loading\">\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                </div>\r\n                            </td></tr>\r\n                        </tbody>\r\n                        :\r\n                        null\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}