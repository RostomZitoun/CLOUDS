{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Majed\\\\Desktop\\\\covidapp\\\\src\\\\components\\\\DailyCovid.js\";\nimport React from 'react';\nimport './DailyCovid.css';\nlet {\n  am4core,\n  am4charts,\n  am4themes_animated\n} = window;\nexport default class DailyCovid extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      am4chart: false,\n      data: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextState.data == null);\n  }\n\n  componentDidMount() {\n    var _s = $RefreshSig$();\n\n    am4core.ready(_s(() => {\n      _s();\n\n      //create chart\n      am4core.useTheme(am4themes_animated);\n      let chart = am4core.create('covidxycluster', am4charts.XYChart);\n      chart.colors.step = 2;\n      chart.legend = new am4charts.Legend();\n      chart.legend.position = 'top';\n      chart.legend.paddingBottom = 20;\n      chart.legend.labels.template.maxWidth = 95;\n      let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n      xAxis.dataFields.category = 'day';\n      xAxis.renderer.cellStartLocation = 0.1;\n      xAxis.renderer.cellEndLocation = 0.9;\n      xAxis.renderer.grid.template.location = 0;\n      let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      yAxis.min = 0;\n\n      let createSeries = (value, name) => {\n        let series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueY = value;\n        series.dataFields.categoryX = 'day';\n        series.name = name;\n        series.events.on(\"hidden\", arrangeColumns);\n        series.events.on(\"shown\", arrangeColumns);\n        let bullet = series.bullets.push(new am4charts.LabelBullet());\n        bullet.interactionsEnabled = false;\n        bullet.dy = 30;\n        bullet.label.text = '{valueY}';\n        bullet.label.fill = am4core.color('#ffffff');\n        return series;\n      };\n\n      function arrangeColumns() {\n        let series = chart.series.getIndex(0);\n        let w = 1 - xAxis.renderer.cellStartLocation - (1 - xAxis.renderer.cellEndLocation);\n\n        if (series.dataItems.length > 1) {\n          let x0 = xAxis.getX(series.dataItems.getIndex(0), \"categoryX\");\n          let x1 = xAxis.getX(series.dataItems.getIndex(1), \"categoryX\");\n          let delta = (x1 - x0) / chart.series.length * w;\n\n          if (am4core.isNumber(delta)) {\n            let middle = chart.series.length / 2;\n            let newIndex = 0;\n            chart.series.each(function (series) {\n              if (!series.isHidden && !series.isHiding) {\n                series.dummyData = newIndex;\n                newIndex++;\n              } else {\n                series.dummyData = chart.series.indexOf(series);\n              }\n            });\n            let visibleCount = newIndex;\n            let newMiddle = visibleCount / 2;\n            chart.series.each(function (series) {\n              let trueIndex = chart.series.indexOf(series);\n              let newIndex = series.dummyData;\n              let dx = (newIndex - trueIndex + middle - newMiddle) * delta;\n              series.animate({\n                property: \"dx\",\n                to: dx\n              }, series.interpolationDuration, series.interpolationEasing);\n              series.bulletsContainer.animate({\n                property: \"dx\",\n                to: dx\n              }, series.interpolationDuration, series.interpolationEasing);\n            });\n          }\n        }\n      }\n\n      createSeries('first', 'TotalDeaths');\n      createSeries('second', 'TotalConfirmed');\n      createSeries('third', 'The Third');\n\n      if (this.state.data) {\n        chart.data = this.state.data;\n      }\n\n      this.setState({\n        am4chart: chart\n      });\n    }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n      return [am4core.useTheme];\n    }));\n\n    let execute = resp => {\n      let data = resp;\n\n      if (this.state.am4chart) {\n        let chart = this.state.am4chart;\n        chart.data = data;\n      }\n\n      this.setState({\n        data\n      });\n    };\n\n    let retry = () => {\n      //needs our database, api19 doesn't provide this\n      // fetch('https://api.covid19api.com/summary').then(\n      //     resp => resp.json()\n      // ).then(\n      //     execute\n      // ).catch(err => retry);\n      execute([{\n        TotalDeaths: 15791,\n        TotalConfirmed: 670392,\n        TotalRecovered: 517882,\n        day: '12 Jan'\n      }, {\n        TotalDeaths: 9534,\n        TotalConfirmed: 586318,\n        TotalRecovered: 470722,\n        day: '11 Jan'\n      }, {\n        TotalDeaths: 9265,\n        TotalConfirmed: 639061,\n        TotalRecovered: 343798,\n        day: '10 Jan'\n      }, {\n        TotalDeaths: 12820,\n        TotalConfirmed: 761531,\n        TotalRecovered: 469297,\n        day: '9 Jan'\n      }, {\n        TotalDeaths: 15028,\n        TotalConfirmed: 839312,\n        TotalRecovered: 413558,\n        day: '8 Jan'\n      }, {\n        TotalDeaths: 14884,\n        TotalConfirmed: 833433,\n        TotalRecovered: 469222,\n        day: '7 Jan'\n      }, {\n        TotalDeaths: 14844,\n        TotalConfirmed: 808271,\n        TotalRecovered: 527852,\n        day: '6 Jan'\n      }]);\n    };\n\n    retry();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"grey\",\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Daily Coronavirus Cases Worldwide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        style: {\n          display: !this.state.data ? \"none\" : \"table\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            id: \"covidxycluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), this.state.data == null ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"full\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Majed/Desktop/covidapp/src/components/DailyCovid.js"],"names":["React","am4core","am4charts","am4themes_animated","window","DailyCovid","Component","constructor","state","am4chart","data","shouldComponentUpdate","nextProps","nextState","componentDidMount","ready","useTheme","chart","create","XYChart","colors","step","legend","Legend","position","paddingBottom","labels","template","maxWidth","xAxis","xAxes","push","CategoryAxis","dataFields","category","renderer","cellStartLocation","cellEndLocation","grid","location","yAxis","yAxes","ValueAxis","min","createSeries","value","name","series","ColumnSeries","valueY","categoryX","events","on","arrangeColumns","bullet","bullets","LabelBullet","interactionsEnabled","dy","label","text","fill","color","getIndex","w","dataItems","length","x0","getX","x1","delta","isNumber","middle","newIndex","each","isHidden","isHiding","dummyData","indexOf","visibleCount","newMiddle","trueIndex","dx","animate","property","to","interpolationDuration","interpolationEasing","bulletsContainer","setState","execute","resp","retry","TotalDeaths","TotalConfirmed","TotalRecovered","day","render","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport './DailyCovid.css';\r\n\r\nlet {am4core, am4charts, am4themes_animated} = window;\r\n\r\nexport default class DailyCovid extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {am4chart: false, data: null};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return !(nextState.data == null);\r\n    }\r\n\r\n    componentDidMount() {\r\n        am4core.ready(() => {\r\n            //create chart\r\n            am4core.useTheme(am4themes_animated);\r\n            let chart = am4core.create('covidxycluster', am4charts.XYChart);\r\n            chart.colors.step = 2;\r\n\r\n            chart.legend = new am4charts.Legend()\r\n            chart.legend.position = 'top'\r\n            chart.legend.paddingBottom = 20\r\n            chart.legend.labels.template.maxWidth = 95\r\n\r\n            let xAxis = chart.xAxes.push(new am4charts.CategoryAxis())\r\n            xAxis.dataFields.category = 'day'\r\n            xAxis.renderer.cellStartLocation = 0.1\r\n            xAxis.renderer.cellEndLocation = 0.9\r\n            xAxis.renderer.grid.template.location = 0;\r\n\r\n            let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n            yAxis.min = 0;\r\n\r\n            let createSeries = (value, name) => {\r\n                let series = chart.series.push(new am4charts.ColumnSeries())\r\n                series.dataFields.valueY = value\r\n                series.dataFields.categoryX = 'day'\r\n                series.name = name\r\n            \r\n                series.events.on(\"hidden\", arrangeColumns);\r\n                series.events.on(\"shown\", arrangeColumns);\r\n            \r\n                let bullet = series.bullets.push(new am4charts.LabelBullet())\r\n                bullet.interactionsEnabled = false\r\n                bullet.dy = 30;\r\n                bullet.label.text = '{valueY}'\r\n                bullet.label.fill = am4core.color('#ffffff')\r\n            \r\n                return series;\r\n            }\r\n\r\n            function arrangeColumns() {\r\n\r\n                let series = chart.series.getIndex(0);\r\n            \r\n                let w = 1 - xAxis.renderer.cellStartLocation - (1 - xAxis.renderer.cellEndLocation);\r\n                if (series.dataItems.length > 1) {\r\n                    let x0 = xAxis.getX(series.dataItems.getIndex(0), \"categoryX\");\r\n                    let x1 = xAxis.getX(series.dataItems.getIndex(1), \"categoryX\");\r\n                    let delta = ((x1 - x0) / chart.series.length) * w;\r\n                    if (am4core.isNumber(delta)) {\r\n                        let middle = chart.series.length / 2;\r\n            \r\n                        let newIndex = 0;\r\n                        chart.series.each(function(series) {\r\n                            if (!series.isHidden && !series.isHiding) {\r\n                                series.dummyData = newIndex;\r\n                                newIndex++;\r\n                            }\r\n                            else {\r\n                                series.dummyData = chart.series.indexOf(series);\r\n                            }\r\n                        })\r\n                        let visibleCount = newIndex;\r\n                        let newMiddle = visibleCount / 2;\r\n            \r\n                        chart.series.each(function(series) {\r\n                            let trueIndex = chart.series.indexOf(series);\r\n                            let newIndex = series.dummyData;\r\n            \r\n                            let dx = (newIndex - trueIndex + middle - newMiddle) * delta\r\n            \r\n                            series.animate({ property: \"dx\", to: dx }, series.interpolationDuration, series.interpolationEasing);\r\n                            series.bulletsContainer.animate({ property: \"dx\", to: dx }, series.interpolationDuration, series.interpolationEasing);\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n            createSeries('first', 'TotalDeaths');\r\n            createSeries('second', 'TotalConfirmed');\r\n            createSeries('third', 'The Third');\r\n\r\n            if ( this.state.data ) {\r\n                chart.data = this.state.data;\r\n            }\r\n\r\n            this.setState({am4chart: chart});\r\n        });\r\n\r\n        let execute = (resp) => {\r\n            let data = resp;\r\n\r\n            if ( this.state.am4chart ) {\r\n                let chart = this.state.am4chart;\r\n                chart.data = data;\r\n            }\r\n\r\n            this.setState({\r\n                data\r\n            });\r\n        };\r\n\r\n        let retry = () => {\r\n            //needs our database, api19 doesn't provide this\r\n            // fetch('https://api.covid19api.com/summary').then(\r\n            //     resp => resp.json()\r\n            // ).then(\r\n            //     execute\r\n            // ).catch(err => retry);\r\n\r\n            execute([\r\n                {\r\n                    TotalDeaths: 15791,\r\n                    TotalConfirmed: 670392,\r\n                    TotalRecovered: 517882,\r\n                    day: '12 Jan',\r\n                }, {\r\n                    TotalDeaths: 9534,\r\n                    TotalConfirmed: 586318,\r\n                    TotalRecovered: 470722,\r\n                    day: '11 Jan',\r\n                }, {\r\n                    TotalDeaths: 9265,\r\n                    TotalConfirmed: 639061,\r\n                    TotalRecovered: 343798,\r\n                    day: '10 Jan'\r\n                }, {\r\n                    TotalDeaths: 12820,\r\n                    TotalConfirmed: 761531,\r\n                    TotalRecovered: 469297,\r\n                    day: '9 Jan'\r\n                }, {\r\n                    TotalDeaths: 15028,\r\n                    TotalConfirmed: 839312,\r\n                    TotalRecovered: 413558,\r\n                    day: '8 Jan'\r\n                }, {\r\n                    TotalDeaths: 14884,\r\n                    TotalConfirmed: 833433,\r\n                    TotalRecovered: 469222,\r\n                    day: '7 Jan'\r\n                }, {\r\n                    TotalDeaths: 14844,\r\n                    TotalConfirmed: 808271,\r\n                    TotalRecovered: 527852,\r\n                    day: '6 Jan'\r\n                }\r\n            ])\r\n        }; retry();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"summary\">\r\n                <thead>\r\n                    <tr className=\"grey\">\r\n                        <td>Daily Coronavirus Cases Worldwide</td>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody style={{display: !this.state.data ? \"none\" : \"table\"}}>\r\n                    <tr><td id=\"covidxycluster\">\r\n                    </td></tr>\r\n                </tbody>\r\n\r\n                {this.state.data == null ?\r\n                    <tbody className=\"full\">\r\n                    <tr><td>\r\n                            <div className=\"loading\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </td></tr>\r\n                    </tbody>\r\n                    :\r\n                    null\r\n                }\r\n            </table>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}