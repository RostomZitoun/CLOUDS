{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Majed\\\\Desktop\\\\lib\\\\covidapp\\\\src\\\\components\\\\CovidPie.js\";\nimport React from 'react';\nimport './CovidPie.css';\nlet {\n  am4core,\n  am4charts\n} = window;\nexport default class CovidPie extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      am4chart: false,\n      data: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextState.data == null);\n  }\n\n  UNSAFE__componentWillUpdate() {\n    if (this.state.am4chart) this.state.am4chart.dispose();\n  }\n\n  componentDidMount() {\n    var _s = $RefreshSig$();\n\n    am4core.ready(_s(() => {\n      _s();\n\n      am4core.useTheme(target => {\n        target.list = [am4core.color(\"#c44569\"), am4core.color(\"#546de5\"), am4core.color(\"#f5cd79\")];\n      });\n      let chart = am4core.create(\"covidpiechart_\" + this.props.name, am4charts.PieChart);\n      let pieSeries = chart.series.push(new am4charts.PieSeries());\n      pieSeries.dataFields.value = \"count\";\n      pieSeries.dataFields.category = \"label\";\n      chart.radius = '100px';\n      chart.innerRadius = am4core.percent(25);\n      pieSeries.ticks.template.disabled = true;\n      pieSeries.alignLabels = false;\n      pieSeries.labels.template.text = \"{value.percent.formatNumber('#.0')}%\";\n      pieSeries.labels.template.radius = am4core.percent(-40);\n      pieSeries.labels.template.fill = am4core.color(\"#fff\");\n      pieSeries.labels.template.adapter.add(\"radius\", function (radius, target) {\n        if (target.dataItem && target.dataItem.values.value.percent < 10) {\n          return 0;\n        }\n\n        return radius;\n      });\n      pieSeries.labels.template.adapter.add(\"fill\", function (color, target) {\n        if (target.dataItem && target.dataItem.values.value.percent < 10) {\n          return am4core.color(\"#fff\");\n        }\n\n        return color;\n      });\n      chart.legend = new am4charts.Legend();\n      chart.legend.markers.template.width = chart.legend.markers.template.height = 10;\n      chart.legend.fontSize = 12;\n      let marker = chart.legend.markers.template.children.getIndex(0);\n      chart.legend.labels.template.fill = am4core.color('#fff');\n      chart.legend.valueLabels.template.fill = am4core.color('#fff');\n      marker.cornerRadius(3, 3, 3, 3);\n      this.setState({\n        am4chart: chart\n      }, () => {\n        if (this.state.data) chart.data = this.state.data;\n      });\n    }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n      return [am4core.useTheme];\n    }));\n\n    let execute = resp => {\n      let data = this.props.extract(resp);\n      this.setState({\n        data\n      }, () => {\n        if (this.state.am4chart) {\n          let chart = this.state.am4chart;\n          chart.data = data;\n        }\n      });\n    };\n\n    let retry = () => {\n      this.props.load().then(resp => resp.json()).then(execute).catch(err => retry);\n    };\n\n    retry();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"grey header\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n          style: {\n            display: !this.state.data ? \"none\" : \"table\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"covidpiechart\",\n              id: \"covidpiechart_\" + this.props.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), this.state.data == null ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"full\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Majed/Desktop/lib/covidapp/src/components/CovidPie.js"],"names":["React","am4core","am4charts","window","CovidPie","Component","constructor","state","am4chart","data","shouldComponentUpdate","nextProps","nextState","UNSAFE__componentWillUpdate","dispose","componentDidMount","ready","useTheme","target","list","color","chart","create","props","name","PieChart","pieSeries","series","push","PieSeries","dataFields","value","category","radius","innerRadius","percent","ticks","template","disabled","alignLabels","labels","text","fill","adapter","add","dataItem","values","legend","Legend","markers","width","height","fontSize","marker","children","getIndex","valueLabels","cornerRadius","setState","execute","resp","extract","retry","load","then","json","catch","err","render","title","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport './CovidPie.css';\r\n\r\nlet {am4core, am4charts} = window;\r\n\r\nexport default class CovidPie extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {am4chart: false, data: null};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return !(nextState.data == null);\r\n    }\r\n    \r\n    UNSAFE__componentWillUpdate() {\r\n        if ( this.state.am4chart )\r\n            this.state.am4chart.dispose();\r\n    } \r\n\r\n    componentDidMount() {\r\n        am4core.ready(() => {\r\n            am4core.useTheme(target => {\r\n                target.list = [\r\n                    am4core.color(\"#c44569\"),\r\n                    am4core.color(\"#546de5\"),\r\n                    am4core.color(\"#f5cd79\")\r\n                ];\r\n            });\r\n            \r\n            let chart = am4core.create(\"covidpiechart_\" + this.props.name, am4charts.PieChart);\r\n            let pieSeries = chart.series.push(new am4charts.PieSeries());\r\n            pieSeries.dataFields.value = \"count\";\r\n            pieSeries.dataFields.category = \"label\";\r\n\r\n            chart.radius = '100px';\r\n            chart.innerRadius = am4core.percent(25);\r\n\r\n            pieSeries.ticks.template.disabled = true;\r\n            pieSeries.alignLabels = false;\r\n            pieSeries.labels.template.text = \"{value.percent.formatNumber('#.0')}%\";\r\n            pieSeries.labels.template.radius = am4core.percent(-40);\r\n            pieSeries.labels.template.fill = am4core.color(\"#fff\");\r\n\r\n            pieSeries.labels.template.adapter.add(\"radius\", function(radius, target) {\r\n                if (target.dataItem && (target.dataItem.values.value.percent < 10)) {\r\n                    return 0;\r\n                }\r\n                return radius;\r\n            });\r\n\r\n            pieSeries.labels.template.adapter.add(\"fill\", function(color, target) {\r\n                if (target.dataItem && (target.dataItem.values.value.percent < 10)) {\r\n                    return am4core.color(\"#fff\");\r\n                }\r\n                return color;\r\n            });\r\n\r\n            chart.legend = new am4charts.Legend();\r\n            chart.legend.markers.template.width = chart.legend.markers.template.height = 10;\r\n            chart.legend.fontSize = 12;\r\n            let marker = chart.legend.markers.template.children.getIndex(0);\r\n            chart.legend.labels.template.fill = am4core.color('#fff');\r\n            chart.legend.valueLabels.template.fill = am4core.color('#fff');\r\n            marker.cornerRadius(3, 3, 3, 3);\r\n            \r\n            this.setState({am4chart: chart}, () => {\r\n                if ( this.state.data )\r\n                chart.data = this.state.data;\r\n            });\r\n        });\r\n\r\n        let execute = (resp) => {\r\n            let data = this.props.extract(resp);\r\n\r\n            this.setState({\r\n                data\r\n            }, () => {\r\n                if ( this.state.am4chart ) {\r\n                    let chart = this.state.am4chart;\r\n                    chart.data = data;\r\n                }\r\n            });\r\n        };\r\n\r\n        let retry = () => {\r\n            this.props.load().then(\r\n                resp => resp.json()\r\n            ).then(\r\n                execute\r\n            ).catch(err => retry);\r\n        }; retry();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"grey header\">{this.props.title}</h1>\r\n                <table className=\"summary\">\r\n                    <tbody style={{display: !this.state.data ? \"none\" : \"table\"}}>\r\n                        <tr><td className=\"covidpiechart\" id={\"covidpiechart_\" + this.props.name}>\r\n                        </td></tr>\r\n                    </tbody>\r\n\r\n                    {this.state.data == null ?\r\n                        <tbody className=\"full\">\r\n                        <tr><td>\r\n                                <div className=\"loading\">\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                </div>\r\n                            </td></tr>\r\n                        </tbody>\r\n                        :\r\n                        null\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}