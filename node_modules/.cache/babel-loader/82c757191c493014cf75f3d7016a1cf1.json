{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Majed\\\\Desktop\\\\lib\\\\covidapp\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport './index.css';\nimport HomePage from './components/Homepage';\nimport CountryPage from './components/CountryPage';\nimport firebase from './firebase';\nlet firestore = firebase.firestore();\nlet ref = firestore.collection('countries');\n\nlet timeInterval = t => new Promise((res, rej) => setTimeout(_ => res(), t));\n\nref.onSnapshot(async snapshot => {\n  console.log(snapshot.docs);\n\n  for (let doc of snapshot.docs) {\n    console.log(doc.id);\n    let data = await fetch('https://api.covid19api.com/country/' + doc.id).then(d => d.json());\n\n    if (data.message || data.length == 0) {\n      console.log('failure in', doc.id); //handle failure\n      //--start 2020-01-23T00:00:00Z\n    } else {\n      console.log(data);\n      let d = data[0],\n          history = [];\n      console.log(d);\n      let value = {\n        Date: d.Date,\n        TotalConfirmed: d.Confirmed,\n        NewConfirmed: d.Confirmed,\n        TotalRecovered: d.Recovered,\n        NewRecovered: d.Recovered,\n        TotalDeaths: d.Deaths,\n        NewDeaths: d.Deaths\n      };\n      history.push(Object.assign({}, value));\n\n      for (let i = 1; i < data.length; i++) {\n        d = data[i];\n        let newValue = {\n          Date: d.Date,\n          TotalConfirmed: d.Confirmed,\n          NewConfirmed: d.Confirmed - value.TotalConfirmed,\n          TotalRecovered: d.Recovered,\n          NewRecovered: d.Recovered - value.TotalRecovered,\n          TotalDeaths: d.Deaths,\n          NewDeaths: d.Deaths - value.TotalDeaths\n        };\n        value = Object.assign(value, newValue);\n        history.push(newValue);\n      }\n\n      ref.doc(doc.id).set({\n        history\n      });\n    }\n\n    await timeInterval(10000);\n  }\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/:country\",\n      component: CountryPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      component: HomePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Majed/Desktop/lib/covidapp/src/index.js"],"names":["React","ReactDOM","Route","BrowserRouter","Router","Switch","HomePage","CountryPage","firebase","firestore","ref","collection","timeInterval","t","Promise","res","rej","setTimeout","_","onSnapshot","snapshot","console","log","docs","doc","id","data","fetch","then","d","json","message","length","history","value","Date","TotalConfirmed","Confirmed","NewConfirmed","TotalRecovered","Recovered","NewRecovered","TotalDeaths","Deaths","NewDeaths","push","Object","assign","i","newValue","set","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Route, BrowserRouter as Router, Switch} from 'react-router-dom';\n\nimport './index.css';\nimport HomePage from './components/Homepage';\nimport CountryPage from './components/CountryPage';\n\nimport firebase from './firebase';\nlet firestore = firebase.firestore();\nlet ref = firestore.collection('countries');\n\nlet timeInterval = (t) => new Promise((res, rej) => setTimeout(_ => res(), t));\n\nref.onSnapshot(async (snapshot) => {\n\tconsole.log(snapshot.docs)\n\tfor ( let doc of snapshot.docs ) {\n\t\tconsole.log(doc.id);\n\t\tlet data = await fetch('https://api.covid19api.com/country/'+doc.id).then(d => d.json());\n\t\tif ( data.message || data.length == 0 ) {\n\t\t\tconsole.log('failure in', doc.id);\n\t\t\t//handle failure\n\t\t\t//--start 2020-01-23T00:00:00Z\n\t\t} else {\n\t\t\tconsole.log(data);\n\t\t\tlet d = data[0], history = [];\n\t\t\tconsole.log(d);\n\t\t\tlet value = {\n\t\t\t\tDate: d.Date,\n\t\t\t\tTotalConfirmed: d.Confirmed,\n\t\t\t\tNewConfirmed: d.Confirmed,\n\t\t\t\tTotalRecovered: d.Recovered,\n\t\t\t\tNewRecovered: d.Recovered,\n\t\t\t\tTotalDeaths: d.Deaths,\n\t\t\t\tNewDeaths: d.Deaths\n\t\t\t};\n\n\t\t\thistory.push(Object.assign({}, value));\n\t\t\tfor ( let i = 1; i < data.length; i++ ) {\n\t\t\t\td = data[i];\n\t\t\t\tlet newValue = {\n\t\t\t\t\tDate: d.Date,\n\t\t\t\t\tTotalConfirmed: d.Confirmed,\n\t\t\t\t\tNewConfirmed: d.Confirmed - value.TotalConfirmed,\n\t\t\t\t\tTotalRecovered: d.Recovered,\n\t\t\t\t\tNewRecovered: d.Recovered - value.TotalRecovered,\n\t\t\t\t\tTotalDeaths: d.Deaths,\n\t\t\t\t\tNewDeaths: d.Deaths - value.TotalDeaths\n\t\t\t\t};\n\n\t\t\t\tvalue = Object.assign(value, newValue);\n\t\t\t\thistory.push(newValue);\n\t\t\t}\n\n\t\t\tref.doc(doc.id).set({history});\t\n\t\t}\n\t\tawait timeInterval(10000);\n\t\t\n\t}\n  });\n\nReactDOM.render(\n  <Router>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/:country\" component={CountryPage}/>\n\t\t\t<Route path=\"/\" component={HomePage}/>\n\t\t</Switch> \n  </Router>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}