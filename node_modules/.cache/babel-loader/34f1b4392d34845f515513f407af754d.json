{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Majed\\\\Desktop\\\\covidapp\\\\src\\\\components\\\\CovidGraph.js\";\nimport React from 'react';\nimport './CovidGraph.css';\nlet {\n  am4core,\n  am4charts\n} = window;\nexport default class CovidGraph extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      am4chart: false,\n      data: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextState.data == null);\n  }\n\n  componentDidMount() {\n    var _s = $RefreshSig$();\n\n    am4core.ready(_s(() => {\n      _s();\n\n      am4core.useTheme(target => {\n        target.list = [am4core.color(\"#c44569\"), am4core.color(\"#546de5\"), am4core.color(\"#f5cd79\")];\n      });\n      let chart = am4core.create(\"covidgraph_\" + this.props.name, am4charts.XYChart);\n      let xAxis = chart.xAxes.push(new am4charts.DateAxis());\n\n      let createAxisAndSeries = (field, name, opposite = true) => {\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        if (chart.yAxes.indexOf(valueAxis) != 0) valueAxis.syncWithAxis = chart.yAxes.getIndex(0);\n        let series = chart.series.push(new am4charts.LineSeries());\n        series.dataFields.valueY = field;\n        series.dataFields.dateX = \"Date\";\n        series.strokeWidth = 2;\n        series.yAxis = valueAxis;\n        series.name = name;\n        series.tooltipText = \"{name}: [bold]{valueY}[/]\";\n        series.tensionX = 0.8;\n        series.showOnInit = true;\n        let interfaceColors = new am4core.InterfaceColorSet();\n        let bullet = series.bullets.push(new am4charts.CircleBullet());\n        bullet.radius = 2;\n        bullet.circle.stroke = interfaceColors.getFor(\"background\");\n        bullet.circle.strokeWidth = 0;\n        valueAxis.renderer.line.disabled = true; //disables axis line\n\n        valueAxis.renderer.labels.template.disabled = true; //disables labels\n\n        valueAxis.renderer.grid.template.disabled = true; //disables grid\n\n        valueAxis.cursorTooltipEnabled = false;\n      };\n\n      createAxisAndSeries(\"Confirmed\", \"Total Cases\");\n      createAxisAndSeries(\"Recovered\", \"Total Recovered\");\n      createAxisAndSeries(\"Deaths\", \"Total Deaths\");\n      chart.legend = new am4charts.Legend();\n      chart.legend.position = 'top';\n      chart.legend.markers.template.width = chart.legend.markers.template.height = 20;\n      chart.legend.fontSize = 12;\n      chart.legend.labels.template.fill = am4core.color('#fff');\n      chart.legend.valueLabels.template.fill = am4core.color('#fff');\n      chart.cursor = new am4charts.XYCursor();\n      chart.cursor.xAxis = xAxis;\n      chart.cursor.fullWidthLineX = true;\n      chart.cursor.lineX.fill = am4core.color(\"#fff\");\n      chart.cursor.lineX.fillOpacity = 0.2;\n      this.setState({\n        am4chart: chart\n      }, () => {\n        console.log('#', this.state.data);\n        if (this.state.data) chart.data = this.state.data;\n      });\n    }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n      return [am4core.useTheme];\n    }));\n\n    let execute = resp => {\n      let data = this.props.extract(resp);\n      this.setState({\n        data\n      }, () => {\n        console.log('?', this.state.am4chart);\n\n        if (this.state.am4chart) {\n          let chart = this.state.am4chart;\n          chart.data = data;\n        }\n      });\n    };\n\n    let retry = () => {\n      this.props.load().then(resp => resp.json()).then(execute).catch(err => retry);\n    };\n\n    retry();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"grey header\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n          style: {\n            display: !this.state.data ? \"none\" : \"table\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"covidgraph\",\n              id: \"covidgraph_\" + this.props.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), this.state.data == null ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"full\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Majed/Desktop/covidapp/src/components/CovidGraph.js"],"names":["React","am4core","am4charts","window","CovidGraph","Component","constructor","state","am4chart","data","shouldComponentUpdate","nextProps","nextState","componentDidMount","ready","useTheme","target","list","color","chart","create","props","name","XYChart","xAxis","xAxes","push","DateAxis","createAxisAndSeries","field","opposite","valueAxis","yAxes","ValueAxis","indexOf","syncWithAxis","getIndex","series","LineSeries","dataFields","valueY","dateX","strokeWidth","yAxis","tooltipText","tensionX","showOnInit","interfaceColors","InterfaceColorSet","bullet","bullets","CircleBullet","radius","circle","stroke","getFor","renderer","line","disabled","labels","template","grid","cursorTooltipEnabled","legend","Legend","position","markers","width","height","fontSize","fill","valueLabels","cursor","XYCursor","fullWidthLineX","lineX","fillOpacity","setState","console","log","execute","resp","extract","retry","load","then","json","catch","err","render","title","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './CovidGraph.css';\r\nlet {am4core, am4charts} = window;\r\n\r\nexport default class CovidGraph extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {am4chart: false, data: null};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return !(nextState.data == null);\r\n    }\r\n\r\n    componentDidMount() {\r\n        am4core.ready(() => {\r\n            am4core.useTheme(target => {\r\n                target.list = [\r\n                    am4core.color(\"#c44569\"),\r\n                    am4core.color(\"#546de5\"),\r\n                    am4core.color(\"#f5cd79\")\r\n                ];\r\n            });\r\n\r\n            let chart = am4core.create(\"covidgraph_\" + this.props.name, am4charts.XYChart);\r\n            let xAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n            let  createAxisAndSeries = (field, name, opposite=true) => {\r\n                let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n                if(chart.yAxes.indexOf(valueAxis) != 0)\r\n                    valueAxis.syncWithAxis = chart.yAxes.getIndex(0);\r\n                \r\n                let series = chart.series.push(new am4charts.LineSeries());\r\n                series.dataFields.valueY = field;\r\n                series.dataFields.dateX = \"Date\";\r\n                series.strokeWidth = 2;\r\n                series.yAxis = valueAxis;\r\n                series.name = name;\r\n                series.tooltipText = \"{name}: [bold]{valueY}[/]\";\r\n                series.tensionX = 0.8;\r\n                series.showOnInit = true;\r\n                \r\n                let interfaceColors = new am4core.InterfaceColorSet();\r\n                let bullet = series.bullets.push(new am4charts.CircleBullet());\r\n                bullet.radius = 2;\r\n                bullet.circle.stroke = interfaceColors.getFor(\"background\");\r\n                bullet.circle.strokeWidth = 0;\r\n\r\n                valueAxis.renderer.line.disabled = true; //disables axis line\r\n                valueAxis.renderer.labels.template.disabled = true; //disables labels\r\n                valueAxis.renderer.grid.template.disabled = true;  //disables grid\r\n                valueAxis.cursorTooltipEnabled = false;\r\n            }\r\n\r\n            createAxisAndSeries(\"Confirmed\", \"Total Cases\");\r\n            createAxisAndSeries(\"Recovered\", \"Total Recovered\");\r\n            createAxisAndSeries(\"Deaths\", \"Total Deaths\");\r\n\r\n            chart.legend = new am4charts.Legend();\r\n            chart.legend.position = 'top';\r\n            chart.legend.markers.template.width = chart.legend.markers.template.height = 20;\r\n            chart.legend.fontSize = 12;\r\n            chart.legend.labels.template.fill = am4core.color('#fff');\r\n            chart.legend.valueLabels.template.fill = am4core.color('#fff');\r\n            \r\n            chart.cursor = new am4charts.XYCursor();\r\n            chart.cursor.xAxis = xAxis;\r\n            chart.cursor.fullWidthLineX = true;\r\n            chart.cursor.lineX.fill = am4core.color(\"#fff\");\r\n            chart.cursor.lineX.fillOpacity = 0.2;\r\n            \r\n            this.setState({am4chart: chart}, () => {\r\n                console.log('#', this.state.data);\r\n                if ( this.state.data )\r\n                    chart.data = this.state.data;\r\n            });\r\n        });\r\n\r\n        let execute = (resp) => {\r\n            let data = this.props.extract(resp);\r\n\r\n            this.setState({\r\n                data\r\n            }, () => {\r\n                console.log('?', this.state.am4chart);\r\n                if ( this.state.am4chart ) {\r\n                    let chart = this.state.am4chart;\r\n                    chart.data = data;\r\n                }\r\n            });\r\n        };\r\n\r\n        let retry = () => {\r\n            this.props.load().then(\r\n                resp => resp.json()\r\n            ).then(\r\n                execute\r\n            ).catch(err => retry);\r\n        }; retry();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"grey header\">{this.props.title}</h1>\r\n                <table className=\"summary\">\r\n                    <tbody style={{display: !this.state.data ? \"none\" : \"table\"}}>\r\n                        <tr><td className=\"covidgraph\" id={\"covidgraph_\" + this.props.name}>\r\n                        </td></tr>\r\n                    </tbody>\r\n\r\n                    {this.state.data == null ?\r\n                        <tbody className=\"full\">\r\n                        <tr><td>\r\n                                <div className=\"loading\">\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                </div>\r\n                            </td></tr>\r\n                        </tbody>\r\n                        :\r\n                        null\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}