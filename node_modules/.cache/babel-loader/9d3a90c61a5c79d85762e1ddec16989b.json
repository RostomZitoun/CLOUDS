{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Majed\\\\Desktop\\\\covidapp\\\\src\\\\components\\\\Homepage.js\";\nimport React from 'react';\nimport CovidSummary from './CovidSummary';\nimport CovidPie from './CovidPie';\nimport DailyCovid from './DailyCovid';\nimport CovidGraph from './CovidGraph';\nimport CovidTable from './CovidTable';\nlet dailyData = [//get from firebase\n{\n  Deaths: 15791,\n  Confirmed: 670392,\n  Recovered: 517882,\n  Date: Date.parse('06 Jan 2021 00:00:00 GMT')\n}, {\n  Deaths: 9534,\n  Confirmed: 586318,\n  Recovered: 470722,\n  Date: Date.parse('07 Jan 2021 00:00:00 GMT')\n}, {\n  Deaths: 9265,\n  Confirmed: 639061,\n  Recovered: 343798,\n  Date: Date.parse('08 Jan 2021 00:00:00 GMT')\n}, {\n  Deaths: 12820,\n  Confirmed: 761531,\n  Recovered: 469297,\n  Date: Date.parse('09 Jan 2021 00:00:00 GMT')\n}, {\n  Deaths: 15028,\n  Confirmed: 839312,\n  Recovered: 413558,\n  Date: Date.parse('10 Jan 2021 00:00:00 GMT')\n}, {\n  Deaths: 14884,\n  Confirmed: 833433,\n  Recovered: 469222,\n  Date: Date.parse('11 Jan 2021 00:00:00 GMT')\n}, {\n  Deaths: 14844,\n  Confirmed: 808271,\n  Recovered: 527852,\n  Date: Date.parse('12 Jan 2021 00:00:00 GMT')\n}].reverse();\n\ndailyData.json = () => dailyData; //DailyCovid and Covid graph need worldwide data, couldn't get it easily from API\n\n\nexport default class HomePage extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"home page\",\n      children: [/*#__PURE__*/_jsxDEV(CovidSummary, {\n        title: \"Coronavirus Summary Worldwide\",\n        load: () => fetch('https://api.covid19api.com/summary'),\n        extract: resp => resp.Global\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CovidPie, {\n        title: \"Coronavirus Cases Distribution Worldwide\",\n        name: \"worldwide\",\n        load: () => fetch(\"https://api.covid19api.com/summary\"),\n        extract: resp => {\n          return [{\n            label: \"Dead Cases\",\n            count: resp.Global.TotalDeaths\n          }, {\n            label: \"Recovered Cases\",\n            count: resp.Global.TotalRecovered\n          }, {\n            label: \"Active Cases\",\n            count: resp.Global.TotalConfirmed - resp.Global.TotalRecovered\n          }];\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DailyCovid, {\n        title: \"Daily Coronavirus Cases in France\",\n        name: \"worldwide\",\n        load: () => fetch(\"https://api.covid19api.com/total/country/france\"),\n        extract: resp => {\n          resp = resp.slice(-8);\n\n          for (let i = 7; i >= 1; i--) {\n            resp[i].Deaths -= resp[i - 1].Deaths;\n            resp[i].Confirmed -= resp[i - 1].Confirmed;\n            resp[i].Recovered -= resp[i - 1].Recovered;\n          }\n\n          return resp.slice(-7);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CovidGraph, {\n        title: \"Total Coronavirus Cases in France\",\n        name: \"france\",\n        load: () => fetch(\"https://api.covid19api.com/total/country/france\"),\n        extract: resp => {\n          return resp;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CovidTable, {\n        title: \"Coronavirus Cases By Country\",\n        load: () => fetch('https://api.covid19api.com/summary'),\n        extract: resp => resp.Countries.sort(x => x.Country)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Majed/Desktop/covidapp/src/components/Homepage.js"],"names":["React","CovidSummary","CovidPie","DailyCovid","CovidGraph","CovidTable","dailyData","Deaths","Confirmed","Recovered","Date","parse","reverse","json","HomePage","Component","constructor","render","fetch","resp","Global","label","count","TotalDeaths","TotalRecovered","TotalConfirmed","slice","i","Countries","sort","x","Country"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport CovidSummary from './CovidSummary';\r\nimport CovidPie from './CovidPie';\r\nimport DailyCovid from './DailyCovid';\r\nimport CovidGraph from './CovidGraph';\r\nimport CovidTable from './CovidTable';\r\n\r\nlet dailyData = [ //get from firebase\r\n\t{\r\n\t\tDeaths: 15791,\r\n\t\tConfirmed: 670392,\r\n\t\tRecovered: 517882,\r\n\t\tDate: Date.parse('06 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tDeaths: 9534,\r\n\t\tConfirmed: 586318,\r\n\t\tRecovered: 470722,\r\n\t\tDate: Date.parse('07 Jan 2021 00:00:00 GMT'),\r\n\t}, {\r\n\t\tDeaths: 9265,\r\n\t\tConfirmed: 639061,\r\n\t\tRecovered: 343798,\r\n\t\tDate:  Date.parse('08 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tDeaths: 12820,\r\n\t\tConfirmed: 761531,\r\n\t\tRecovered: 469297,\r\n\t\tDate: Date.parse('09 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tDeaths: 15028,\r\n\t\tConfirmed: 839312,\r\n\t\tRecovered: 413558,\r\n\t\tDate: Date.parse('10 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tDeaths: 14884,\r\n\t\tConfirmed: 833433,\r\n\t\tRecovered: 469222,\r\n\t\tDate: Date.parse('11 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tDeaths: 14844,\r\n\t\tConfirmed: 808271,\r\n\t\tRecovered: 527852,\r\n\t\tDate: Date.parse('12 Jan 2021 00:00:00 GMT')\r\n\t}\r\n].reverse(); dailyData.json = () => dailyData;\r\n//DailyCovid and Covid graph need worldwide data, couldn't get it easily from API\r\n\r\nexport default class HomePage extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"home page\">\r\n                <CovidSummary title=\"Coronavirus Summary Worldwide\" load={() => fetch('https://api.covid19api.com/summary')} extract={(resp) => resp.Global}/>\r\n\r\n                <CovidPie title=\"Coronavirus Cases Distribution Worldwide\" name=\"worldwide\" load={() => fetch(\"https://api.covid19api.com/summary\")} extract={resp => {\r\n                    return [\r\n                        {label: \"Dead Cases\", count: resp.Global.TotalDeaths},\r\n                        {label: \"Recovered Cases\", count: resp.Global.TotalRecovered},\r\n                        {label: \"Active Cases\", count: resp.Global.TotalConfirmed - resp.Global.TotalRecovered}\r\n                    ];\r\n                }}/>\r\n\r\n                <DailyCovid title=\"Daily Coronavirus Cases in France\" name=\"worldwide\" load={() => fetch(\"https://api.covid19api.com/total/country/france\")} extract={resp => {\r\n                    resp = resp.slice(-8);\r\n                    for ( let i = 7; i >= 1; i-- ) {\r\n                        resp[i].Deaths -= resp[i-1].Deaths;\r\n                        resp[i].Confirmed -= resp[i-1].Confirmed;\r\n                        resp[i].Recovered -= resp[i-1].Recovered;\r\n                    }\r\n                    return resp.slice(-7);\r\n                }}/>\r\n                <CovidGraph title=\"Total Coronavirus Cases in France\" name=\"france\" load={() => fetch(\"https://api.covid19api.com/total/country/france\")} extract={resp => {\r\n                    return resp;\r\n                }} />\r\n                <CovidTable title=\"Coronavirus Cases By Country\" load={() => fetch('https://api.covid19api.com/summary')} extract={resp => resp.Countries.sort(x => x.Country)}></CovidTable>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}