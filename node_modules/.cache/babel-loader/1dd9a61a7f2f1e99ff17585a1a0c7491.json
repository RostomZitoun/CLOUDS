{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Majed\\\\Desktop\\\\covidapp\\\\src\\\\components\\\\CovidPie.js\";\nimport React from 'react';\nimport './CovidPie.css';\nlet {\n  am4core,\n  am4charts\n} = window;\nexport default class CovidPie extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      am4chart: false,\n      data: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextState.data == null);\n  }\n\n  componentDidMount() {\n    am4core.ready(() => {\n      let chart = am4core.create(\"covidpiechart\", am4charts.PieChart);\n      this.setState({\n        am4chart: chart\n      });\n    });\n\n    let execute = resp => {\n      this.setState({\n        data: [{\n          label: \"Dead Cases\",\n          count: resp.Global.TotalDeaths,\n          color: am4core.color(\"#c44569\")\n        }, {\n          label: \"Recovered Cases\",\n          count: resp.Global.TotalRecovered,\n          color: am4core.color(\"#546de5\")\n        }, {\n          label: \"Active Cases\",\n          count: resp.Global.TotalConfirmed - resp.Global.TotalRecovered,\n          color: am4core.color(\"#f5cd79\")\n        }]\n      });\n      let chart = this.state.am4chart;\n      let pieSeries = chart.series.push(new am4charts.PieSeries());\n      pieSeries.dataFields.value = \"count\";\n      pieSeries.dataFields.category = \"label\";\n      pieSeries.slices.template.propertyFields.fill = \"color\";\n      chart.radius = '100px';\n      chart.innerRadius = am4core.percent(25);\n      pieSeries.ticks.template.disabled = true;\n      pieSeries.alignLabels = false;\n      pieSeries.labels.template.text = \"{value.percent.formatNumber('#.0')}%\";\n      pieSeries.labels.template.radius = am4core.percent(-40);\n      pieSeries.labels.template.fill = am4core.color(\"#fff\");\n      pieSeries.labels.template.adapter.add(\"radius\", function (radius, target) {\n        if (target.dataItem && target.dataItem.values.value.percent < 10) {\n          return 0;\n        }\n\n        return radius;\n      });\n      pieSeries.labels.template.adapter.add(\"fill\", function (color, target) {\n        if (target.dataItem && target.dataItem.values.value.percent < 10) {\n          return am4core.color(\"#fff\");\n        }\n\n        return color;\n      });\n      pieSeries.hiddenState.properties.opacity = 1;\n      pieSeries.hiddenState.properties.endAngle = -90;\n      pieSeries.hiddenState.properties.startAngle = -90;\n      chart.legend = new am4charts.Legend();\n      chart.legend.markers.template.width = chart.legend.markers.template.height = 10;\n      chart.legend.fontSize = 12;\n      let marker = chart.legend.markers.template.children.getIndex(0);\n      chart.legend.labels.template.fill = am4core.color('#fff');\n      chart.legend.valueLabels.template.fill = am4core.color('#fff');\n      marker.cornerRadius(12, 12, 12, 12);\n      chart.data = this.state.data;\n    };\n\n    let retry = () => {\n      fetch('https://api.covid19api.com/summary').then(resp => resp.json()).then(execute).catch(err => retry);\n    };\n\n    retry();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"grey\",\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Coronavirus Cases Distribution Worldwide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        style: {\n          display: !this.state.data ? \"none\" : \"table\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            id: \"covidpiechart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), this.state.data == null ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"full\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Majed/Desktop/covidapp/src/components/CovidPie.js"],"names":["React","am4core","am4charts","window","CovidPie","Component","constructor","state","am4chart","data","shouldComponentUpdate","nextProps","nextState","componentDidMount","ready","chart","create","PieChart","setState","execute","resp","label","count","Global","TotalDeaths","color","TotalRecovered","TotalConfirmed","pieSeries","series","push","PieSeries","dataFields","value","category","slices","template","propertyFields","fill","radius","innerRadius","percent","ticks","disabled","alignLabels","labels","text","adapter","add","target","dataItem","values","hiddenState","properties","opacity","endAngle","startAngle","legend","Legend","markers","width","height","fontSize","marker","children","getIndex","valueLabels","cornerRadius","retry","fetch","then","json","catch","err","render","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport './CovidPie.css';\r\n\r\nlet {am4core, am4charts} = window;\r\n\r\nexport default class CovidPie extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {am4chart: false, data: null};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return !(nextState.data == null);\r\n    }\r\n\r\n    componentDidMount() {\r\n        am4core.ready(() => {\r\n            let chart = am4core.create(\"covidpiechart\", am4charts.PieChart);\r\n            this.setState({am4chart: chart});\r\n            \r\n        });\r\n\r\n        let execute = (resp) => {\r\n            this.setState({\r\n                data: [\r\n                    {label: \"Dead Cases\", count: resp.Global.TotalDeaths, color: am4core.color(\"#c44569\")},\r\n                    {label: \"Recovered Cases\", count: resp.Global.TotalRecovered, color: am4core.color(\"#546de5\")},\r\n                    {label: \"Active Cases\", count: resp.Global.TotalConfirmed - resp.Global.TotalRecovered, color: am4core.color(\"#f5cd79\")}\r\n                ]\r\n            });\r\n\r\n            let chart = this.state.am4chart;\r\n            let pieSeries = chart.series.push(new am4charts.PieSeries());\r\n            pieSeries.dataFields.value = \"count\";\r\n            pieSeries.dataFields.category = \"label\";\r\n            pieSeries.slices.template.propertyFields.fill = \"color\";\r\n\r\n            chart.radius = '100px';\r\n            chart.innerRadius = am4core.percent(25);\r\n\r\n            pieSeries.ticks.template.disabled = true;\r\n            pieSeries.alignLabels = false;\r\n            pieSeries.labels.template.text = \"{value.percent.formatNumber('#.0')}%\";\r\n            pieSeries.labels.template.radius = am4core.percent(-40);\r\n            pieSeries.labels.template.fill = am4core.color(\"#fff\");\r\n\r\n            pieSeries.labels.template.adapter.add(\"radius\", function(radius, target) {\r\n                if (target.dataItem && (target.dataItem.values.value.percent < 10)) {\r\n                    return 0;\r\n                }\r\n                return radius;\r\n            });\r\n\r\n            pieSeries.labels.template.adapter.add(\"fill\", function(color, target) {\r\n                if (target.dataItem && (target.dataItem.values.value.percent < 10)) {\r\n                    return am4core.color(\"#fff\");\r\n                }\r\n                return color;\r\n            });\r\n\r\n            pieSeries.hiddenState.properties.opacity = 1;\r\n            pieSeries.hiddenState.properties.endAngle = -90;\r\n            pieSeries.hiddenState.properties.startAngle = -90;\r\n\r\n            chart.legend = new am4charts.Legend();\r\n            chart.legend.markers.template.width = chart.legend.markers.template.height = 10;\r\n            chart.legend.fontSize = 12;\r\n            let marker = chart.legend.markers.template.children.getIndex(0);\r\n            chart.legend.labels.template.fill = am4core.color('#fff');\r\n            chart.legend.valueLabels.template.fill = am4core.color('#fff');\r\n            marker.cornerRadius(12, 12, 12, 12);\r\n            \r\n            chart.data = this.state.data;\r\n        };\r\n\r\n        let retry = () => {\r\n            fetch('https://api.covid19api.com/summary').then(\r\n                resp => resp.json()\r\n            ).then(\r\n                execute\r\n            ).catch(err => retry);\r\n        }; retry();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"summary\">\r\n                <thead>\r\n                    <tr className=\"grey\">\r\n                        <td>Coronavirus Cases Distribution Worldwide</td>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody style={{display: !this.state.data ? \"none\" : \"table\"}}>\r\n                    <tr><td id=\"covidpiechart\">\r\n                    </td></tr>\r\n                </tbody>\r\n\r\n                {this.state.data == null ?\r\n                    <tbody className=\"full\">\r\n                    <tr><td>\r\n                            <div className=\"loading\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </td></tr>\r\n                    </tbody>\r\n                    :\r\n                    null\r\n                }\r\n            </table>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}