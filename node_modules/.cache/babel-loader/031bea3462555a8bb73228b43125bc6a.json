{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Majed\\\\Desktop\\\\covidapp\\\\src\\\\components\\\\Homepage.js\";\nimport React from 'react';\nimport CovidSummary from './CovidSummary';\nimport CovidPie from './CovidPie';\nimport DailyCovid from './DailyCovid';\nimport CovidGraph from './CovidGraph';\nimport CovidTable from './CovidTable';\nlet dailyData = [//get from firebase\n{\n  TotalDeaths: 15791,\n  TotalConfirmed: 670392,\n  TotalRecovered: 517882,\n  day: Date.parse('06 Jan 2021 00:00:00 GMT')\n}, {\n  TotalDeaths: 9534,\n  TotalConfirmed: 586318,\n  TotalRecovered: 470722,\n  day: Date.parse('07 Jan 2021 00:00:00 GMT')\n}, {\n  TotalDeaths: 9265,\n  TotalConfirmed: 639061,\n  TotalRecovered: 343798,\n  day: Date.parse('08 Jan 2021 00:00:00 GMT')\n}, {\n  TotalDeaths: 12820,\n  TotalConfirmed: 761531,\n  TotalRecovered: 469297,\n  day: Date.parse('09 Jan 2021 00:00:00 GMT')\n}, {\n  TotalDeaths: 15028,\n  TotalConfirmed: 839312,\n  TotalRecovered: 413558,\n  day: Date.parse('10 Jan 2021 00:00:00 GMT')\n}, {\n  TotalDeaths: 14884,\n  TotalConfirmed: 833433,\n  TotalRecovered: 469222,\n  day: Date.parse('11 Jan 2021 00:00:00 GMT')\n}, {\n  TotalDeaths: 14844,\n  TotalConfirmed: 808271,\n  TotalRecovered: 527852,\n  day: Date.parse('12 Jan 2021 00:00:00 GMT')\n}].reverse();\n\ndailyData.json = () => dailyData; //DailyCovid and Covid graph need worldwide data, couldn't get it easily from API\n\n\nexport default class HomePage extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"homepage\",\n      children: [/*#__PURE__*/_jsxDEV(CovidSummary, {\n        title: \"Coronavirus Summary Worldwide\",\n        load: () => fetch('https://api.covid19api.com/summary'),\n        extract: resp => resp.Global\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CovidPie, {\n        title: \"Coronavirus Cases Distribution Worldwide\",\n        name: \"worldwide\",\n        load: () => fetch(\"https://api.covid19api.com/summary\"),\n        extract: resp => {\n          return [{\n            label: \"Dead Cases\",\n            count: resp.Global.TotalDeaths\n          }, {\n            label: \"Recovered Cases\",\n            count: resp.Global.TotalRecovered\n          }, {\n            label: \"Active Cases\",\n            count: resp.Global.TotalConfirmed - resp.Global.TotalRecovered\n          }];\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DailyCovid, {\n        title: \"Daily Coronavirus Cases Worldwide\",\n        name: \"worldwide\",\n        load: fetch('https://api.covid19api.com/country/france'),\n        extract: resp => {\n          return resp.slice(-7);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CovidGraph, {\n        title: \"Total Coronavirus Cases in France\",\n        name: \"france\",\n        load: () => fetch(\"https://api.covid19api.com/total/country/france\"),\n        extract: resp => {\n          return resp;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CovidTable, {\n        title: \"Coronavirus Cases By Country\",\n        load: () => fetch('https://api.covid19api.com/summary'),\n        extract: resp => resp.Countries.sort(x => x.Country)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Majed/Desktop/covidapp/src/components/Homepage.js"],"names":["React","CovidSummary","CovidPie","DailyCovid","CovidGraph","CovidTable","dailyData","TotalDeaths","TotalConfirmed","TotalRecovered","day","Date","parse","reverse","json","HomePage","Component","constructor","render","fetch","resp","Global","label","count","slice","Countries","sort","x","Country"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport CovidSummary from './CovidSummary';\r\nimport CovidPie from './CovidPie';\r\nimport DailyCovid from './DailyCovid';\r\nimport CovidGraph from './CovidGraph';\r\nimport CovidTable from './CovidTable';\r\n\r\nlet dailyData = [ //get from firebase\r\n\t{\r\n\t\tTotalDeaths: 15791,\r\n\t\tTotalConfirmed: 670392,\r\n\t\tTotalRecovered: 517882,\r\n\t\tday: Date.parse('06 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tTotalDeaths: 9534,\r\n\t\tTotalConfirmed: 586318,\r\n\t\tTotalRecovered: 470722,\r\n\t\tday: Date.parse('07 Jan 2021 00:00:00 GMT'),\r\n\t}, {\r\n\t\tTotalDeaths: 9265,\r\n\t\tTotalConfirmed: 639061,\r\n\t\tTotalRecovered: 343798,\r\n\t\tday:  Date.parse('08 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tTotalDeaths: 12820,\r\n\t\tTotalConfirmed: 761531,\r\n\t\tTotalRecovered: 469297,\r\n\t\tday: Date.parse('09 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tTotalDeaths: 15028,\r\n\t\tTotalConfirmed: 839312,\r\n\t\tTotalRecovered: 413558,\r\n\t\tday: Date.parse('10 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tTotalDeaths: 14884,\r\n\t\tTotalConfirmed: 833433,\r\n\t\tTotalRecovered: 469222,\r\n\t\tday: Date.parse('11 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tTotalDeaths: 14844,\r\n\t\tTotalConfirmed: 808271,\r\n\t\tTotalRecovered: 527852,\r\n\t\tday: Date.parse('12 Jan 2021 00:00:00 GMT')\r\n\t}\r\n].reverse(); dailyData.json = () => dailyData;\r\n\r\n//DailyCovid and Covid graph need worldwide data, couldn't get it easily from API\r\nexport default class HomePage extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"homepage\">\r\n                <CovidSummary title=\"Coronavirus Summary Worldwide\" load={() => fetch('https://api.covid19api.com/summary')} extract={(resp) => resp.Global}/>\r\n\r\n                <CovidPie title=\"Coronavirus Cases Distribution Worldwide\" name=\"worldwide\" load={() => fetch(\"https://api.covid19api.com/summary\")} extract={resp => {\r\n                    return [\r\n                        {label: \"Dead Cases\", count: resp.Global.TotalDeaths},\r\n                        {label: \"Recovered Cases\", count: resp.Global.TotalRecovered},\r\n                        {label: \"Active Cases\", count: resp.Global.TotalConfirmed - resp.Global.TotalRecovered}\r\n                    ];\r\n                }}/>\r\n\r\n                <DailyCovid title=\"Daily Coronavirus Cases Worldwide\" name=\"worldwide\" load={fetch('https://api.covid19api.com/country/france')} extract={resp => {\r\n                    return resp.slice(-7)\r\n                }}/>\r\n                <CovidGraph title=\"Total Coronavirus Cases in France\" name=\"france\" load={() => fetch(\"https://api.covid19api.com/total/country/france\")} extract={resp => {\r\n                    return resp;\r\n                }} />\r\n                <CovidTable title=\"Coronavirus Cases By Country\" load={() => fetch('https://api.covid19api.com/summary')} extract={resp => resp.Countries.sort(x => x.Country)}></CovidTable>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}