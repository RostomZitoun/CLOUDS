{"version":3,"sources":["components/CovidSummary.js","components/CovidPie.js","components/DailyCovid.js","components/CovidGraph.js","components/CovidTable.js","components/arrow_up.png","components/arrow_up_active.png","components/Homepage.js","components/CountryPage.js","firebase.js","index.js"],"names":["CovidSummary","state","data","execute","resp","props","extract","setState","retry","load","then","json","catch","err","className","this","title","TotalConfirmed","toLocaleString","NewConfirmed","TotalRecovered","NewRecovered","toFixed","TotalDeaths","NewDeaths","React","Component","window","am4core","am4charts","CovidPie","am4chart","nextProps","nextState","dispose","ready","useTheme","target","list","color","chart","create","name","PieChart","pieSeries","series","push","PieSeries","dataFields","value","category","radius","innerRadius","percent","ticks","template","disabled","alignLabels","labels","text","fill","adapter","add","dataItem","values","legend","Legend","markers","width","height","fontSize","marker","children","getIndex","valueLabels","cornerRadius","style","display","id","DailyCovid","XYChart","position","xAxis","xAxes","DateAxis","renderer","cellStartLocation","cellEndLocation","grid","location","yAxis","yAxes","ValueAxis","min","createSeries","ColumnSeries","valueY","dateX","tooltipText","cursor","XYCursor","fullWidthLineX","lineX","fillOpacity","cursorTooltipEnabled","CovidGraph","field","LineSeries","strokeWidth","sortMethod","order","fields","sort","x","y","reverse","document","querySelector","classList","remove","onClick","map","idx","to","Slug","Country","dailyData","Deaths","Confirmed","Recovered","Date","parse","HomePage","fetch","Global","label","count","slice","i","Countries","CountryPage","split","toUpperCase","join","country","match","params","console","log","class","countryName","countries","length","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","collection","ReactDOM","render","exact","path","component","getElementById"],"mappings":"2UAIqBA,G,wDACjB,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,KAAM,MAHA,E,gEAOO,IAAD,OACZC,EAAU,SAACC,GACX,IAAIF,EAAO,EAAKG,MAAMC,QAAQF,GAC9B,EAAKG,SAAS,CACVL,WAII,SAARM,IACA,EAAKH,MAAMI,OAAOC,MACd,SAAAN,GAAI,OAAIA,EAAKO,UACfD,KACEP,GACFS,OAAM,SAAAC,GAAG,OAAIL,KAChBA,K,+BAIH,OACI,gCACI,oBAAIM,UAAU,cAAd,SAA6BC,KAAKV,MAAMW,QACxC,uBAAOF,UAAU,UAAjB,SACKC,KAAKd,MAAMC,KACZ,kCACI,qBAAIY,UAAU,SAAd,UACI,6CACA,6BAAMC,KAAKd,MAAMC,KAAKe,eAAeC,eAAe,WAExD,qBAAIJ,UAAU,SAAd,UACI,2CACA,6BAAMC,KAAKd,MAAMC,KAAKiB,aAAaD,eAAe,WAEtD,qBAAIJ,UAAU,SAAd,UACI,8CACA,8BAAOC,KAAKd,MAAMC,KAAKe,eAAiBF,KAAKd,MAAMC,KAAKkB,gBAAgBF,eAAe,WAG3F,qBAAIJ,UAAU,OAAd,UACI,iDACA,6BAAMC,KAAKd,MAAMC,KAAKkB,eAAeF,eAAe,WAExD,qBAAIJ,UAAU,OAAd,UACI,+CACA,6BAAMC,KAAKd,MAAMC,KAAKmB,aAAaH,eAAe,WAEtD,qBAAIJ,UAAU,OAAd,UACI,+CACA,8BAAOC,KAAKd,MAAMC,KAAKkB,eAAeL,KAAKd,MAAMC,KAAKe,eAAe,KAAKK,QAAQ,GAAGJ,eAAe,MAAQ,UAGhH,qBAAIJ,UAAU,MAAd,UACI,8CACA,6BAAMC,KAAKd,MAAMC,KAAKqB,YAAYL,eAAe,WAErD,qBAAIJ,UAAU,MAAd,UACI,4CACA,6BAAMC,KAAKd,MAAMC,KAAKsB,UAAUN,eAAe,WAEnD,qBAAIJ,UAAU,MAAd,UACI,gDACA,8BAAOC,KAAKd,MAAMC,KAAKqB,YAAYR,KAAKd,MAAMC,KAAKe,eAAe,KAAKK,QAAQ,GAAGJ,eAAe,MAAQ,aAIjH,gCACI,6BAAI,6BACA,sBAAKJ,UAAU,UAAf,UACI,wBACA,wBACA,0C,GA7EUW,IAAMC,Y,SCArBC,QAAtBC,E,EAAAA,QAASC,E,EAAAA,UAEOC,E,kDACjB,aAAe,IAAD,8BACV,gBACK7B,MAAQ,CAAC8B,UAAU,EAAO7B,KAAM,MAF3B,E,kEAKQ8B,EAAWC,GAC7B,QAA2B,MAAlBA,EAAU/B,Q,oDAIda,KAAKd,MAAM8B,UACZhB,KAAKd,MAAM8B,SAASG,Y,0CAGP,IAAD,OAChBN,EAAQO,OAAM,WACVP,EAAQQ,UAAS,SAAAC,GACbA,EAAOC,KAAO,CACVV,EAAQW,MAAM,WACdX,EAAQW,MAAM,WACdX,EAAQW,MAAM,eAItB,IAAIC,EAAQZ,EAAQa,OAAO,iBAAmB,EAAKpC,MAAMqC,KAAMb,EAAUc,UACrEC,EAAYJ,EAAMK,OAAOC,KAAK,IAAIjB,EAAUkB,WAChDH,EAAUI,WAAWC,MAAQ,QAC7BL,EAAUI,WAAWE,SAAW,QAEhCV,EAAMW,OAAS,QACfX,EAAMY,YAAcxB,EAAQyB,QAAQ,IAEpCT,EAAUU,MAAMC,SAASC,UAAW,EACpCZ,EAAUa,aAAc,EACxBb,EAAUc,OAAOH,SAASI,KAAO,uCACjCf,EAAUc,OAAOH,SAASJ,OAASvB,EAAQyB,SAAS,IACpDT,EAAUc,OAAOH,SAASK,KAAOhC,EAAQW,MAAM,QAE/CK,EAAUc,OAAOH,SAASM,QAAQC,IAAI,UAAU,SAASX,EAAQd,GAC7D,OAAIA,EAAO0B,UAAa1B,EAAO0B,SAASC,OAAOf,MAAMI,QAAU,GACpD,EAEJF,KAGXP,EAAUc,OAAOH,SAASM,QAAQC,IAAI,QAAQ,SAASvB,EAAOF,GAC1D,OAAIA,EAAO0B,UAAa1B,EAAO0B,SAASC,OAAOf,MAAMI,QAAU,GACpDzB,EAAQW,MAAM,QAElBA,KAGXC,EAAMyB,OAAS,IAAIpC,EAAUqC,OAC7B1B,EAAMyB,OAAOE,QAAQZ,SAASa,MAAQ5B,EAAMyB,OAAOE,QAAQZ,SAASc,OAAS,GAC7E7B,EAAMyB,OAAOK,SAAW,GACxB,IAAIC,EAAS/B,EAAMyB,OAAOE,QAAQZ,SAASiB,SAASC,SAAS,GAC7DjC,EAAMyB,OAAOP,OAAOH,SAASK,KAAOhC,EAAQW,MAAM,QAClDC,EAAMyB,OAAOS,YAAYnB,SAASK,KAAOhC,EAAQW,MAAM,QACvDgC,EAAOI,aAAa,EAAG,EAAG,EAAG,GAE7B,EAAKpE,SAAS,CAACwB,SAAUS,IAAQ,WACxB,EAAKvC,MAAMC,OAChBsC,EAAMtC,KAAO,EAAKD,MAAMC,YAIhC,IAAIC,EAAU,SAACC,GACX,IAAIF,EAAO,EAAKG,MAAMC,QAAQF,GAE9B,EAAKG,SAAS,CACVL,SACD,WACM,EAAKD,MAAM8B,WACA,EAAK9B,MAAM8B,SACjB7B,KAAOA,QAKb,SAARM,IACA,EAAKH,MAAMI,OAAOC,MACd,SAAAN,GAAI,OAAIA,EAAKO,UACfD,KACEP,GACFS,OAAM,SAAAC,GAAG,OAAIL,KAChBA,K,+BAIH,OACI,gCACI,oBAAIM,UAAU,cAAd,SAA6BC,KAAKV,MAAMW,QACxC,wBAAOF,UAAU,UAAjB,UACI,uBAAO8D,MAAO,CAACC,QAAU9D,KAAKd,MAAMC,KAAgB,QAAT,QAA3C,SACI,6BAAI,oBAAIY,UAAU,gBAAgBgE,GAAI,iBAAmB/D,KAAKV,MAAMqC,WAIpD,MAAnB3B,KAAKd,MAAMC,KACR,uBAAOY,UAAU,OAAjB,SACA,6BAAI,6BACI,sBAAKA,UAAU,UAAf,UACI,wBACA,wBACA,iCAKZ,e,GA9GcW,IAAMC,W,SCFjBC,QAAtBC,E,EAAAA,QAASC,E,EAAAA,UAEOkD,E,kDACjB,aAAe,IAAD,8BACV,gBACK9E,MAAQ,CAAC8B,UAAU,EAAO7B,KAAM,MAF3B,E,kEAKQ8B,EAAWC,GAC7B,OAAwB,MAAnBlB,KAAKd,MAAMC,O,oDAMXa,KAAKd,MAAM8B,UACZhB,KAAKd,MAAM8B,SAASG,Y,0CAGP,IAAD,OAChBN,EAAQO,OAAM,WAEVP,EAAQQ,UAAS,SAAAC,GACbA,EAAOC,KAAO,CACVV,EAAQW,MAAM,WACdX,EAAQW,MAAM,WACdX,EAAQW,MAAM,eAGtB,IAAIC,EAAQZ,EAAQa,OAAO,iBAAmB,EAAKpC,MAAMqC,KAAMb,EAAUmD,SACzExC,EAAMyB,OAAS,IAAIpC,EAAUqC,OAC7B1B,EAAMyB,OAAOgB,SAAW,SACxBzC,EAAMyB,OAAOE,QAAQZ,SAASa,MAAQ5B,EAAMyB,OAAOE,QAAQZ,SAASc,OAAS,GAC7E7B,EAAMyB,OAAOK,SAAW,GACxB,IAAIC,EAAS/B,EAAMyB,OAAOE,QAAQZ,SAASiB,SAASC,SAAS,GAC7DjC,EAAMyB,OAAOP,OAAOH,SAASK,KAAOhC,EAAQW,MAAM,QAClDC,EAAMyB,OAAOS,YAAYnB,SAASK,KAAOhC,EAAQW,MAAM,QACvDgC,EAAOI,aAAa,EAAG,EAAG,EAAG,GAE7B,IAAIO,EAAQ1C,EAAM2C,MAAMrC,KAAK,IAAIjB,EAAUuD,UAC3CF,EAAMlC,WAAWE,SAAW,MAC5BgC,EAAMG,SAASC,kBAAoB,EACnCJ,EAAMG,SAASE,gBAAkB,EACjCL,EAAMG,SAASG,KAAKjC,SAASkC,SAAW,EACxCP,EAAMG,SAAS3B,OAAOH,SAASK,KAAOhC,EAAQW,MAAM,QAEpD,IAAImD,EAAQlD,EAAMmD,MAAM7C,KAAK,IAAIjB,EAAU+D,WAC3CF,EAAML,SAAS3B,OAAOH,SAASK,KAAOhC,EAAQW,MAAM,QACpDmD,EAAMG,IAAM,EAEZ,IAAIC,EAAe,SAAC7C,EAAOP,GACvB,IAAIG,EAASL,EAAMK,OAAOC,KAAK,IAAIjB,EAAUkE,cAM7C,OALAlD,EAAOG,WAAWgD,OAAS/C,EAC3BJ,EAAOG,WAAWiD,MAAQ,OAC1BpD,EAAOH,KAAOA,EACdG,EAAOqD,YAAc,WAEdrD,GAGXiD,EAAa,SAAU,gBACvBA,EAAa,YAAa,mBAC1BA,EAAa,YAAa,mBAC1BtD,EAAM2D,OAAS,IAAItE,EAAUuE,SAC7BzE,OAAOwE,OAAS3D,EAAM2D,OAEtB3D,EAAM2D,OAAOjB,MAAQA,EACrB1C,EAAM2D,OAAOE,gBAAiB,EAC9B7D,EAAM2D,OAAOG,MAAM1C,KAAOhC,EAAQW,MAAM,QACxCC,EAAM2D,OAAOG,MAAMC,YAAc,GACjCrB,EAAMsB,sBAAuB,EAE7B,EAAKjG,SAAS,CAACwB,SAAUS,IAAQ,WACxB,EAAKvC,MAAMC,OACZsC,EAAMtC,KAAO,EAAKD,MAAMC,YAKpC,IAAIC,EAAU,SAACC,GACX,IAAIF,EAAO,EAAKG,MAAMC,QAAQF,GAE9B,EAAKG,SAAS,CACVL,SACD,WACM,EAAKD,MAAM8B,WACA,EAAK9B,MAAM8B,SACjB7B,KAAOA,QAKb,SAARM,IACA,EAAKH,MAAMI,OAAOC,MACd,SAAAN,GAAI,OAAIA,EAAKO,UACfD,KACEP,GACFS,OAAM,SAAAC,GAAG,OAAIL,KAChBA,K,+BAIH,OACI,gCACI,oBAAIM,UAAU,cAAd,SAA6BC,KAAKV,MAAMW,QACxC,wBAAOF,UAAU,UAAjB,UACI,uBAAO8D,MAAO,CAACC,QAAU9D,KAAKd,MAAMC,KAAgB,QAAT,QAA3C,SACI,6BAAI,oBAAIY,UAAU,iBAAiBgE,GAAI,iBAAmB/D,KAAKV,MAAMqC,WAIrD,MAAnB3B,KAAKd,MAAMC,KACR,uBAAOY,UAAU,OAAjB,SACA,6BAAI,6BACI,sBAAKA,UAAU,UAAf,UACI,wBACA,wBACA,iCAKZ,e,GAxHgBW,IAAMC,W,SCJnBC,QAAtBC,E,EAAAA,QAASC,E,EAAAA,UAEO4E,E,kDACjB,aAAe,IAAD,8BACV,gBACKxG,MAAQ,CAAC8B,UAAU,EAAO7B,KAAM,MAF3B,E,kEAKQ8B,EAAWC,GAC7B,QAA2B,MAAlBA,EAAU/B,Q,oDAIda,KAAKd,MAAM8B,UACZhB,KAAKd,MAAM8B,SAASG,Y,0CAGP,IAAD,OAChBN,EAAQO,OAAM,WACVP,EAAQQ,UAAS,SAAAC,GACbA,EAAOC,KAAO,CACVV,EAAQW,MAAM,WACdX,EAAQW,MAAM,WACdX,EAAQW,MAAM,eAItB,IAAIC,EAAQZ,EAAQa,OAAO,cAAgB,EAAKpC,MAAMqC,KAAMb,EAAUmD,SAClEE,EAAQ1C,EAAM2C,MAAMrC,KAAK,IAAIjB,EAAUuD,UACvCM,EAAQlD,EAAMmD,MAAM7C,KAAK,IAAIjB,EAAU+D,WAE3CV,EAAMG,SAAS3B,OAAOH,SAASK,KAAOhC,EAAQW,MAAM,QACpDmD,EAAML,SAAS3B,OAAOH,SAASK,KAAOhC,EAAQW,MAAM,QAEpD,IAAKuD,EAAe,SAACY,EAAOhE,GAAyB,IAC7CG,EAASL,EAAMK,OAAOC,KAAK,IAAIjB,EAAU8E,YAC7C9D,EAAOG,WAAWgD,OAASU,EAC3B7D,EAAOG,WAAWiD,MAAQ,OAC1BpD,EAAO+D,YAAc,EACrB/D,EAAO6C,MAAQA,EACf7C,EAAOH,KAAOA,EACdG,EAAOqD,YAAc,4BACrBrD,EAAO0D,YAAc,IAQzBT,EAAa,SAAU,gBACvBA,EAAa,YAAa,mBAC1BA,EAAa,YAAa,eAE1BtD,EAAMyB,OAAS,IAAIpC,EAAUqC,OAC7B1B,EAAMyB,OAAOgB,SAAW,MACxBzC,EAAMyB,OAAOE,QAAQZ,SAASa,MAAQ5B,EAAMyB,OAAOE,QAAQZ,SAASc,OAAS,GAC7E7B,EAAMyB,OAAOK,SAAW,GACxB9B,EAAMyB,OAAOP,OAAOH,SAASK,KAAOhC,EAAQW,MAAM,QAClDC,EAAMyB,OAAOS,YAAYnB,SAASK,KAAOhC,EAAQW,MAAM,QAEvDC,EAAM2D,OAAS,IAAItE,EAAUuE,SAC7B5D,EAAM2D,OAAOjB,MAAQA,EACrB1C,EAAM2D,OAAOE,gBAAiB,EAC9B7D,EAAM2D,OAAOG,MAAM1C,KAAOhC,EAAQW,MAAM,QACxCC,EAAM2D,OAAOG,MAAMC,YAAc,GAEjC,EAAKhG,SAAS,CAACwB,SAAUS,IAAQ,WACxB,EAAKvC,MAAMC,OACZsC,EAAMtC,KAAO,EAAKD,MAAMC,YAKpC,IAAIC,EAAU,SAACC,GACX,IAAIF,EAAO,EAAKG,MAAMC,QAAQF,GAE9B,EAAKG,SAAS,CACVL,SACD,WACM,EAAKD,MAAM8B,WACA,EAAK9B,MAAM8B,SACjB7B,KAAOA,QAKb,SAARM,IACA,EAAKH,MAAMI,OAAOC,MACd,SAAAN,GAAI,OAAIA,EAAKO,UACfD,KACEP,GACFS,OAAM,SAAAC,GAAG,OAAIL,KAChBA,K,+BAIH,OACI,gCACI,oBAAIM,UAAU,cAAd,SAA6BC,KAAKV,MAAMW,QACxC,wBAAOF,UAAU,UAAjB,UACI,uBAAO8D,MAAO,CAACC,QAAU9D,KAAKd,MAAMC,KAAgB,QAAT,QAA3C,SACI,6BAAI,oBAAIY,UAAU,aAAagE,GAAI,cAAgB/D,KAAKV,MAAMqC,WAI9C,MAAnB3B,KAAKd,MAAMC,KACR,uBAAOY,UAAU,OAAjB,SACA,6BAAI,6BACI,sBAAKA,UAAU,UAAf,UACI,wBACA,wBACA,iCAKZ,e,GAnHgBW,IAAMC,WCGzB1B,G,MCPN,ICAA,I,kDFQX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,KAAM,KACN2G,WAAY,MAJN,E,gEAQO,IAAD,OACZ1G,EAAU,SAACC,GACX,IAAIF,EAAO,EAAKG,MAAMC,QAAQF,GAC9B,EAAKG,SAAS,CACVL,OAAM2G,WAAY,CAAC,EAAG,OAIlB,SAARrG,IACA,EAAKH,MAAMI,OAAOC,MACd,SAAAN,GAAI,OAAIA,EAAKO,UACfD,KACEP,GACFS,OAAM,SAAAC,GAAG,OAAIL,KAChBA,K,oDAIEO,KAAKd,MAAM8B,UACZhB,KAAKd,MAAM8B,SAASG,Y,2BAGvB4E,GACD,GAAK/F,KAAKd,MAAM4G,WAAW,IAAMC,EAAM,IAAM/F,KAAKd,MAAM4G,WAAW,IAAMC,EAAM,GAA/E,CAGA,IAAIC,EAAS,CAAC,UAAW,eAAgB,iBAAkB,eAAgB,iBAAkB,YAAa,eACtG7G,EAAOa,KAAKd,MAAMC,KAAK8G,MAAK,SAACC,EAAGC,GAAJ,OAAe,GAAGD,EAAEF,EAAOD,EAAM,KAAOI,EAAEH,EAAOD,EAAM,MAA5C,KACtCA,EAAM,IAAK5G,EAAKiH,UAErBpG,KAAKR,SAAS,CACVL,KAAKA,EAAM2G,WAAYC,IACxB,WACCM,SAASC,cAAc,gBAAgBC,UAAUC,OAAO,eACxDH,SAASC,cAAT,gEAAgF,EAAIP,EAAM,GAA1F,2BAA+G,EAAEA,EAAM,GAAvH,MAA8HQ,UAAUxD,IAAI,qB,+BAI1I,IAAD,OACL,OACI,gCACI,oBAAIhD,UAAU,cAAd,SAA6BC,KAAKV,MAAMW,QACvCD,KAAKd,MAAMC,KACR,wBAAOY,UAAU,gBAAjB,UACI,kCACI,+BACI,6BAAI,6CACJ,6BAAI,+CACJ,6BAAI,iDACJ,6BAAI,oDACJ,6BAAI,sDACJ,6BAAI,gDACJ,6BAAI,qDAER,+BACI,+BAAI,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,aAAY,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,8BAC9G,+BAAI,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,aAAY,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,kBAC9G,+BAAI,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,aAAY,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,kBAC9G,+BAAI,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,aAAY,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,kBAC9G,+BAAI,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,aAAY,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,kBAC9G,+BAAI,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,aAAY,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,kBAC9G,+BAAI,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,aAAY,mBAAG0G,QAAS,kBAAM,EAAKR,KAAK,CAAC,EAAG,KAAKlG,UAAU,wBAGtH,gCACKC,KAAKd,MAAMC,KAAKuH,KAAI,SAACvH,EAAMwH,GAAP,OACjB,+BACI,6BAAI,cAAC,IAAD,CAAMC,GAAI,IAAMzH,EAAK0H,KAArB,SAA4B1H,EAAK2H,YACrC,6BAAK3H,EAAKiB,aAAaD,eAAe,QACtC,6BAAKhB,EAAKe,eAAeC,eAAe,QACxC,6BAAKhB,EAAKmB,aAAaH,eAAe,QACtC,6BAAKhB,EAAKkB,eAAeF,eAAe,QACxC,6BAAKhB,EAAKsB,UAAUN,eAAe,QACnC,6BAAKhB,EAAKqB,YAAYL,eAAe,UAPhCwG,WAarB,uBAAO5G,UAAU,UAAjB,SACI,gCACI,6BAAI,6BACA,sBAAKA,UAAU,UAAf,UACI,wBACA,wBACA,0C,GA9FMW,IAAMC,YGC5CoG,EAAY,CACf,CACCC,OAAQ,MACRC,UAAW,OACXC,UAAW,OACXC,KAAMA,KAAKC,MAAM,6BACf,CACFJ,OAAQ,KACRC,UAAW,OACXC,UAAW,OACXC,KAAMA,KAAKC,MAAM,6BACf,CACFJ,OAAQ,KACRC,UAAW,OACXC,UAAW,OACXC,KAAOA,KAAKC,MAAM,6BAChB,CACFJ,OAAQ,MACRC,UAAW,OACXC,UAAW,OACXC,KAAMA,KAAKC,MAAM,6BACf,CACFJ,OAAQ,MACRC,UAAW,OACXC,UAAW,OACXC,KAAMA,KAAKC,MAAM,6BACf,CACFJ,OAAQ,MACRC,UAAW,OACXC,UAAW,OACXC,KAAMA,KAAKC,MAAM,6BACf,CACFJ,OAAQ,MACRC,UAAW,OACXC,UAAW,OACXC,KAAMA,KAAKC,MAAM,8BAEjBhB,UAAWW,EAAUnH,KAAO,kBAAMmH,G,IAGfM,E,kDACjB,aAAe,wC,qDAKX,OACI,sBAAKtH,UAAU,YAAf,UACI,cAAC,EAAD,CAAcE,MAAM,gCAAgCP,KAAM,kBAAM4H,MAAM,uCAAuC/H,QAAS,SAACF,GAAD,OAAUA,EAAKkI,UAErI,cAAC,EAAD,CAAUtH,MAAM,2CAA2C0B,KAAK,YAAYjC,KAAM,kBAAM4H,MAAM,uCAAuC/H,QAAS,SAAAF,GAC1I,MAAO,CACH,CAACmI,MAAO,aAAcC,MAAOpI,EAAKkI,OAAO/G,aACzC,CAACgH,MAAO,kBAAmBC,MAAOpI,EAAKkI,OAAOlH,gBAC9C,CAACmH,MAAO,eAAgBC,MAAOpI,EAAKkI,OAAOrH,eAAiBb,EAAKkI,OAAOlH,oBAIhF,cAAC,EAAD,CAAYJ,MAAM,oCAAoC0B,KAAK,YAAYjC,KAAM,kBAAM4H,MAAM,oDAAoD/H,QAAS,SAAAF,GAClJA,EAAOA,EAAKqI,OAAO,GACnB,IAAM,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IACrBtI,EAAKsI,GAAGX,QAAU3H,EAAKsI,EAAE,GAAGX,OAC5B3H,EAAKsI,GAAGV,WAAa5H,EAAKsI,EAAE,GAAGV,UAC/B5H,EAAKsI,GAAGT,WAAa7H,EAAKsI,EAAE,GAAGT,UAEnC,OAAO7H,EAAKqI,OAAO,MAEvB,cAAC,EAAD,CAAYzH,MAAM,oCAAoC0B,KAAK,SAASjC,KAAM,kBAAM4H,MAAM,oDAAoD/H,QAAS,SAAAF,GAC/I,OAAOA,KAEX,cAAC,EAAD,CAAYY,MAAM,+BAA+BP,KAAM,kBAAM4H,MAAM,uCAAuC/H,QAAS,SAAAF,GAAI,OAAIA,EAAKuI,UAAU3B,MAAK,SAAAC,GAAC,OAAIA,EAAEY,qB,GA9BhIpG,IAAMC,WCzCvBkH,E,kDACjB,aAAe,wC,wDAIHlG,GACR,OAAOA,EAAKmG,MAAM,KAAKpB,KAAI,SAAAR,GAAC,OAAIA,EAAE,GAAG6B,cAAgB7B,EAAEwB,MAAM,MAAIM,KAAK,O,+BAItE,IAAIC,EAAUjI,KAAKV,MAAM4I,MAAMC,OAAOF,QAEtC,OADAG,QAAQC,IAAIJ,GAER,sBAAKK,MAAM,eAAX,UACI,cAAC,EAAD,CAAcrI,MAAO,0BAA4BD,KAAKuI,YAAYN,GAAUvI,KAAM,kBAAM4H,MAAM,uCAAuC/H,QAAS,SAACF,GAE3I,IADA,IAAImJ,EAAYnJ,EAAKuI,UACXD,EAAI,EAAGA,EAAIa,EAAUC,QACtBD,EAAUb,GAAGd,MAAQoB,EADSN,KAIvC,OAAKA,GAAKa,EAAU3B,KACT,KACJ2B,EAAUb,MAGrB,cAAC,EAAD,CAAU1H,MAAO,qCAAuCD,KAAKuI,YAAYN,GAAUtG,KAAMsG,EAASvI,KAAM,kBAAM4H,MAAM,uCAAuC/H,QAAS,SAAAF,GAEhK,IADA,IAAImJ,EAAYnJ,EAAKuI,UACXD,EAAI,EAAGA,EAAIa,EAAUC,QACtBD,EAAUb,GAAGd,MAAQoB,EADSN,KAIvC,OAAKA,GAAKa,EAAU3B,KACT,MAEXuB,QAAQC,IAAIG,EAAUb,IACf,CACH,CAACH,MAAO,aAAcC,MAAOe,EAAUb,GAAGnH,aAC1C,CAACgH,MAAO,kBAAmBC,MAAOe,EAAUb,GAAGtH,gBAC/C,CAACmH,MAAO,eAAgBC,MAAOe,EAAUb,GAAGzH,eAAiBsI,EAAUb,GAAGtH,qBAIlF,cAAC,EAAD,CAAYJ,MAAO,8BAAgCD,KAAKuI,YAAYN,GAAUtG,KAAMsG,EAASvI,KAAM,kBAAM4H,MAAM,4CAA8CW,IAAU1I,QAAS,SAAAF,GAC5KA,EAAOA,EAAKqI,OAAO,GACnB,IAAM,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IACrBtI,EAAKsI,GAAGX,QAAU3H,EAAKsI,EAAE,GAAGX,OAC5B3H,EAAKsI,GAAGV,WAAa5H,EAAKsI,EAAE,GAAGV,UAC/B5H,EAAKsI,GAAGT,WAAa7H,EAAKsI,EAAE,GAAGT,UAEnC,OAAO7H,EAAKqI,OAAO,MAGvB,cAAC,EAAD,CAAYzH,MAAO,8BAAgCD,KAAKuI,YAAYN,GAAUtG,KAAK,SAASjC,KAAM,kBAAM4H,MAAM,4CAA8CW,IAAU1I,QAAS,SAAAF,GAC3K,OAAOA,Y,GArDcqB,IAAMC,W,cCO/C+H,IAASC,cAXY,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,oDACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIJT,EAAf,ECNyBU,YACLC,WAAW,aAI/BC,IAASC,OACP,cAAC,IAAD,UACA,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW7B,IACzC,cAAC,IAAD,CAAO4B,KAAK,IAAIC,UAAWrC,SAG5BhB,SAASsD,eAAe,W","file":"static/js/main.fc9d995a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './CovidSummary.css';\r\n\r\nexport default class CovidSummary extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let execute = (resp) => {\r\n            let data = this.props.extract(resp);\r\n            this.setState({\r\n                data\r\n            });\r\n        };\r\n\r\n        let retry = () => {\r\n            this.props.load().then(\r\n                resp => resp.json()\r\n            ).then(\r\n                execute\r\n            ).catch(err => retry);\r\n        }; retry();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"grey header\">{this.props.title}</h1>\r\n                <table className=\"summary\">\r\n                    {this.state.data ?\r\n                    <tbody>\r\n                        <tr className=\"yellow\">\r\n                            <td>Total Cases</td>\r\n                            <td>{ this.state.data.TotalConfirmed.toLocaleString('en') }</td>\r\n                        </tr>\r\n                        <tr className=\"yellow\">\r\n                            <td>New Cases</td>\r\n                            <td>{ this.state.data.NewConfirmed.toLocaleString('en') }</td>\r\n                        </tr>\r\n                        <tr className=\"yellow\">\r\n                            <td>Active Cases</td>\r\n                            <td>{ (this.state.data.TotalConfirmed - this.state.data.TotalRecovered).toLocaleString('en') }</td>\r\n                        </tr>\r\n\r\n                        <tr className=\"blue\">\r\n                            <td>Total Recovered</td>\r\n                            <td>{ this.state.data.TotalRecovered.toLocaleString('en') }</td>\r\n                        </tr>\r\n                        <tr className=\"blue\">\r\n                            <td>New Recovered</td>\r\n                            <td>{ this.state.data.NewRecovered.toLocaleString('en') }</td>\r\n                        </tr>\r\n                        <tr className=\"blue\">\r\n                            <td>Recovery Rate</td>\r\n                            <td>{ (this.state.data.TotalRecovered/this.state.data.TotalConfirmed*100).toFixed(2).toLocaleString('en') + ' %' }</td>\r\n                        </tr>\r\n\r\n                        <tr className=\"red\">\r\n                            <td>Total Deaths</td>\r\n                            <td>{ this.state.data.TotalDeaths.toLocaleString('en') }</td>\r\n                        </tr>\r\n                        <tr className=\"red\">\r\n                            <td>New Deaths</td>\r\n                            <td>{ this.state.data.NewDeaths.toLocaleString('en') }</td>\r\n                        </tr>\r\n                        <tr className=\"red\">\r\n                            <td>Mortality Rate</td>\r\n                            <td>{ (this.state.data.TotalDeaths/this.state.data.TotalConfirmed*100).toFixed(2).toLocaleString('en') + ' %' }</td>\r\n                        </tr>\r\n                    </tbody>\r\n                        :\r\n                    <tbody>\r\n                        <tr><td>\r\n                            <div className=\"loading\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </td></tr>\r\n                    </tbody>\r\n                    }\r\n                    \r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n};","import React from 'react';\r\n\r\nimport './CovidPie.css';\r\n\r\nlet {am4core, am4charts} = window;\r\n\r\nexport default class CovidPie extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {am4chart: false, data: null};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return !(nextState.data == null);\r\n    }\r\n    \r\n    UNSAFE__componentWillUpdate() {\r\n        if ( this.state.am4chart )\r\n            this.state.am4chart.dispose();\r\n    } \r\n\r\n    componentDidMount() {\r\n        am4core.ready(() => {\r\n            am4core.useTheme(target => {\r\n                target.list = [\r\n                    am4core.color(\"#c44569\"),\r\n                    am4core.color(\"#546de5\"),\r\n                    am4core.color(\"#f5cd79\")\r\n                ];\r\n            });\r\n            \r\n            let chart = am4core.create(\"covidpiechart_\" + this.props.name, am4charts.PieChart);\r\n            let pieSeries = chart.series.push(new am4charts.PieSeries());\r\n            pieSeries.dataFields.value = \"count\";\r\n            pieSeries.dataFields.category = \"label\";\r\n\r\n            chart.radius = '100px';\r\n            chart.innerRadius = am4core.percent(25);\r\n\r\n            pieSeries.ticks.template.disabled = true;\r\n            pieSeries.alignLabels = false;\r\n            pieSeries.labels.template.text = \"{value.percent.formatNumber('#.0')}%\";\r\n            pieSeries.labels.template.radius = am4core.percent(-40);\r\n            pieSeries.labels.template.fill = am4core.color(\"#fff\");\r\n\r\n            pieSeries.labels.template.adapter.add(\"radius\", function(radius, target) {\r\n                if (target.dataItem && (target.dataItem.values.value.percent < 10)) {\r\n                    return 0;\r\n                }\r\n                return radius;\r\n            });\r\n\r\n            pieSeries.labels.template.adapter.add(\"fill\", function(color, target) {\r\n                if (target.dataItem && (target.dataItem.values.value.percent < 10)) {\r\n                    return am4core.color(\"#fff\");\r\n                }\r\n                return color;\r\n            });\r\n\r\n            chart.legend = new am4charts.Legend();\r\n            chart.legend.markers.template.width = chart.legend.markers.template.height = 10;\r\n            chart.legend.fontSize = 12;\r\n            let marker = chart.legend.markers.template.children.getIndex(0);\r\n            chart.legend.labels.template.fill = am4core.color('#fff');\r\n            chart.legend.valueLabels.template.fill = am4core.color('#fff');\r\n            marker.cornerRadius(3, 3, 3, 3);\r\n            \r\n            this.setState({am4chart: chart}, () => {\r\n                if ( this.state.data )\r\n                chart.data = this.state.data;\r\n            });\r\n        });\r\n\r\n        let execute = (resp) => {\r\n            let data = this.props.extract(resp);\r\n\r\n            this.setState({\r\n                data\r\n            }, () => {\r\n                if ( this.state.am4chart ) {\r\n                    let chart = this.state.am4chart;\r\n                    chart.data = data;\r\n                }\r\n            });\r\n        };\r\n\r\n        let retry = () => {\r\n            this.props.load().then(\r\n                resp => resp.json()\r\n            ).then(\r\n                execute\r\n            ).catch(err => retry);\r\n        }; retry();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"grey header\">{this.props.title}</h1>\r\n                <table className=\"summary\">\r\n                    <tbody style={{display: !this.state.data ? \"none\" : \"table\"}}>\r\n                        <tr><td className=\"covidpiechart\" id={\"covidpiechart_\" + this.props.name}>\r\n                        </td></tr>\r\n                    </tbody>\r\n\r\n                    {this.state.data == null ?\r\n                        <tbody className=\"full\">\r\n                        <tr><td>\r\n                                <div className=\"loading\">\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                </div>\r\n                            </td></tr>\r\n                        </tbody>\r\n                        :\r\n                        null\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './DailyCovid.css';\r\n\r\nlet {am4core, am4charts} = window;\r\n\r\nexport default class DailyCovid extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {am4chart: false, data: null};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if ( this.state.data == null )\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    UNSAFE__componentWillUpdate() {\r\n        if ( this.state.am4chart )\r\n            this.state.am4chart.dispose();\r\n    } \r\n\r\n    componentDidMount() {\r\n        am4core.ready(() => {\r\n            //create chart\r\n            am4core.useTheme(target => {\r\n                target.list = [\r\n                    am4core.color(\"#c44569\"),\r\n                    am4core.color(\"#546de5\"),\r\n                    am4core.color(\"#f5cd79\")\r\n                ];\r\n            });\r\n            let chart = am4core.create(\"covidxycluster\" + this.props.name, am4charts.XYChart);\r\n            chart.legend = new am4charts.Legend()\r\n            chart.legend.position = 'bottom'\r\n            chart.legend.markers.template.width = chart.legend.markers.template.height = 10;\r\n            chart.legend.fontSize = 12;\r\n            let marker = chart.legend.markers.template.children.getIndex(0);\r\n            chart.legend.labels.template.fill = am4core.color('#fff');\r\n            chart.legend.valueLabels.template.fill = am4core.color('#fff');\r\n            marker.cornerRadius(3, 3, 3, 3);\r\n\r\n            let xAxis = chart.xAxes.push(new am4charts.DateAxis())\r\n            xAxis.dataFields.category = 'day'\r\n            xAxis.renderer.cellStartLocation = 0;\r\n            xAxis.renderer.cellEndLocation = 1;\r\n            xAxis.renderer.grid.template.location = 0;\r\n            xAxis.renderer.labels.template.fill = am4core.color(\"#fff\");\r\n\r\n            let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n            yAxis.renderer.labels.template.fill = am4core.color(\"#fff\");\r\n            yAxis.min = 0;\r\n\r\n            let createSeries = (value, name) => {\r\n                let series = chart.series.push(new am4charts.ColumnSeries())\r\n                series.dataFields.valueY = value;\r\n                series.dataFields.dateX = 'Date';\r\n                series.name = name;\r\n                series.tooltipText = \"{valueY}\";\r\n            \r\n                return series;\r\n            }\r\n\r\n            createSeries('Deaths', 'Total Deaths');\r\n            createSeries('Recovered', 'Total Recovered');\r\n            createSeries('Confirmed', 'Total Confirmed');\r\n            chart.cursor = new am4charts.XYCursor();\r\n            window.cursor = chart.cursor;\r\n\r\n            chart.cursor.xAxis = xAxis;\r\n            chart.cursor.fullWidthLineX = true;\r\n            chart.cursor.lineX.fill = am4core.color(\"#fff\");\r\n            chart.cursor.lineX.fillOpacity = 0.2;\r\n            xAxis.cursorTooltipEnabled = false;\r\n\r\n            this.setState({am4chart: chart}, () => {\r\n                if ( this.state.data ) { \r\n                    chart.data = this.state.data;\r\n                } \r\n            });           \r\n        });\r\n\r\n        let execute = (resp) => {\r\n            let data = this.props.extract(resp);\r\n\r\n            this.setState({\r\n                data\r\n            }, () => {\r\n                if ( this.state.am4chart ) {\r\n                    let chart = this.state.am4chart;\r\n                    chart.data = data;\r\n                }\r\n            });\r\n        };\r\n\r\n        let retry = () => {\r\n            this.props.load().then(\r\n                resp => resp.json()\r\n            ).then(\r\n                execute\r\n            ).catch(err => retry);\r\n        }; retry();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"grey header\">{this.props.title}</h1>\r\n                <table className=\"summary\">\r\n                    <tbody style={{display: !this.state.data ? \"none\" : \"table\"}}>\r\n                        <tr><td className=\"covidxycluster\" id={\"covidxycluster\" + this.props.name}>\r\n                        </td></tr>\r\n                    </tbody>\r\n\r\n                    {this.state.data == null ?\r\n                        <tbody className=\"full\">\r\n                        <tr><td>\r\n                                <div className=\"loading\">\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                </div>\r\n                            </td></tr>\r\n                        </tbody>\r\n                        :\r\n                        null\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './CovidGraph.css';\r\nlet {am4core, am4charts} = window;\r\n\r\nexport default class CovidGraph extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {am4chart: false, data: null};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return !(nextState.data == null);\r\n    }\r\n\r\n    UNSAFE__componentWillUpdate() {\r\n        if ( this.state.am4chart )\r\n            this.state.am4chart.dispose();\r\n    } \r\n\r\n    componentDidMount() {\r\n        am4core.ready(() => {\r\n            am4core.useTheme(target => {\r\n                target.list = [\r\n                    am4core.color(\"#c44569\"),\r\n                    am4core.color(\"#546de5\"),\r\n                    am4core.color(\"#f5cd79\")\r\n                ];\r\n            });\r\n\r\n            let chart = am4core.create(\"covidgraph_\" + this.props.name, am4charts.XYChart);\r\n            let xAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n            let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n            xAxis.renderer.labels.template.fill = am4core.color(\"#fff\");\r\n            yAxis.renderer.labels.template.fill = am4core.color(\"#fff\");\r\n\r\n            let  createSeries = (field, name, opposite=true) => {\r\n                let series = chart.series.push(new am4charts.LineSeries());\r\n                series.dataFields.valueY = field;\r\n                series.dataFields.dateX = \"Date\";\r\n                series.strokeWidth = 4;\r\n                series.yAxis = yAxis;\r\n                series.name = name;\r\n                series.tooltipText = \"{name}: [bold]{valueY}[/]\";\r\n                series.fillOpacity = 0.1;\r\n\r\n                // valueAxis.renderer.line.disabled = true; //disables axis line\r\n                // valueAxis.renderer.labels.template.disabled = true; //disables labels\r\n                // valueAxis.renderer.grid.template.disabled = true;  //disables grid\r\n                // valueAxis.cursorTooltipEnabled = false;\r\n            }\r\n\r\n            createSeries(\"Deaths\", \"Total Deaths\");\r\n            createSeries(\"Recovered\", \"Total Recovered\");\r\n            createSeries(\"Confirmed\", \"Total Cases\");\r\n\r\n            chart.legend = new am4charts.Legend();\r\n            chart.legend.position = 'top';\r\n            chart.legend.markers.template.width = chart.legend.markers.template.height = 20;\r\n            chart.legend.fontSize = 12;\r\n            chart.legend.labels.template.fill = am4core.color('#fff');\r\n            chart.legend.valueLabels.template.fill = am4core.color('#fff');\r\n            \r\n            chart.cursor = new am4charts.XYCursor();\r\n            chart.cursor.xAxis = xAxis;\r\n            chart.cursor.fullWidthLineX = true;\r\n            chart.cursor.lineX.fill = am4core.color(\"#fff\");\r\n            chart.cursor.lineX.fillOpacity = 0.2;\r\n            \r\n            this.setState({am4chart: chart}, () => {\r\n                if ( this.state.data )\r\n                    chart.data = this.state.data;\r\n            });\r\n        });\r\n\r\n\r\n        let execute = (resp) => {\r\n            let data = this.props.extract(resp);\r\n\r\n            this.setState({\r\n                data\r\n            }, () => {\r\n                if ( this.state.am4chart ) {\r\n                    let chart = this.state.am4chart;\r\n                    chart.data = data;\r\n                }\r\n            });\r\n        };\r\n\r\n        let retry = () => {\r\n            this.props.load().then(\r\n                resp => resp.json()\r\n            ).then(\r\n                execute\r\n            ).catch(err => retry);\r\n        }; retry();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"grey header\">{this.props.title}</h1>\r\n                <table className=\"summary\">\r\n                    <tbody style={{display: !this.state.data ? \"none\" : \"table\"}}>\r\n                        <tr><td className=\"covidgraph\" id={\"covidgraph_\" + this.props.name}>\r\n                        </td></tr>\r\n                    </tbody>\r\n\r\n                    {this.state.data == null ?\r\n                        <tbody className=\"full\">\r\n                        <tr><td>\r\n                                <div className=\"loading\">\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                </div>\r\n                            </td></tr>\r\n                        </tbody>\r\n                        :\r\n                        null\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './CovidTable.css';\r\nimport arrow_up from './arrow_up.png';\r\nimport arrow_up_active from './arrow_up_active.png';\r\n\r\nexport default class CovidSummary extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: null,\r\n            sortMethod: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let execute = (resp) => {\r\n            let data = this.props.extract(resp);\r\n            this.setState({\r\n                data, sortMethod: [0, 0] //column 0, increasing\r\n            }); //will update from template\r\n        };\r\n\r\n        let retry = () => {\r\n            this.props.load().then(\r\n                resp => resp.json()\r\n            ).then(\r\n                execute\r\n            ).catch(err => retry);\r\n        }; retry();\r\n    }\r\n\r\n    UNSAFE__componentWillUpdate() {\r\n        if ( this.state.am4chart )\r\n            this.state.am4chart.dispose();\r\n    } \r\n\r\n    sort(order) {\r\n        if ( this.state.sortMethod[0] == order[0] && this.state.sortMethod[1] == order[1] )\r\n            return;\r\n        \r\n        let fields = ['Country', 'NewConfirmed', 'TotalConfirmed', 'NewRecovered', 'TotalRecovered', 'NewDeaths', 'TotalDeaths'];\r\n        let data = this.state.data.sort((x, y) => -1 + 2*(x[fields[order[0]]] > y[fields[order[0]]]));\r\n        if ( order[1] ) data.reverse();\r\n\r\n        this.setState({\r\n            data:data, sortMethod: order\r\n        }, () => {\r\n            document.querySelector('.sort_active').classList.remove('sort_active');\r\n            document.querySelector(`.summary.table thead tr:nth-of-type(2) td:nth-of-type(${1 + order[0]}) i:nth-of-type(${2-order[1]})`).classList.add('sort_active');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"grey header\">{this.props.title}</h1>\r\n                {this.state.data ? \r\n                    <table className=\"summary table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td><span>Country</span></td>\r\n                                <td><span>New Cases</span></td>\r\n                                <td><span>Total Cases</span></td>\r\n                                <td><span>New Recoveries</span></td>\r\n                                <td><span>Total Recoveries</span></td>\r\n                                <td><span>New Deaths</span></td>\r\n                                <td><span>Total Deaths</span></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><i onClick={() => this.sort([0, 1])} className=\"arrow_up\"/><i onClick={() => this.sort([0, 0])} className=\"arrow_down sort_active\"/></td>\r\n                                <td><i onClick={() => this.sort([1, 1])} className=\"arrow_up\"/><i onClick={() => this.sort([1, 0])} className=\"arrow_down\"/></td>\r\n                                <td><i onClick={() => this.sort([2, 1])} className=\"arrow_up\"/><i onClick={() => this.sort([2, 0])} className=\"arrow_down\"/></td>\r\n                                <td><i onClick={() => this.sort([3, 1])} className=\"arrow_up\"/><i onClick={() => this.sort([3, 0])} className=\"arrow_down\"/></td>\r\n                                <td><i onClick={() => this.sort([4, 1])} className=\"arrow_up\"/><i onClick={() => this.sort([4, 0])} className=\"arrow_down\"/></td>\r\n                                <td><i onClick={() => this.sort([5, 1])} className=\"arrow_up\"/><i onClick={() => this.sort([5, 0])} className=\"arrow_down\"/></td>\r\n                                <td><i onClick={() => this.sort([6, 1])} className=\"arrow_up\"/><i onClick={() => this.sort([6, 0])} className=\"arrow_down\"/></td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.data.map((data, idx) => (\r\n                                <tr key={idx}>\r\n                                    <td><Link to={\"/\" + data.Slug}>{data.Country}</Link></td>\r\n                                    <td>{data.NewConfirmed.toLocaleString('en')}</td>\r\n                                    <td>{data.TotalConfirmed.toLocaleString('en')}</td>\r\n                                    <td>{data.NewRecovered.toLocaleString('en')}</td>\r\n                                    <td>{data.TotalRecovered.toLocaleString('en')}</td>\r\n                                    <td>{data.NewDeaths.toLocaleString('en')}</td>\r\n                                    <td>{data.TotalDeaths.toLocaleString('en')}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    :\r\n                    <table className=\"summary\">\r\n                        <tbody>\r\n                            <tr><td>\r\n                                <div className=\"loading\">\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                </div>\r\n                            </td></tr>\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};","export default __webpack_public_path__ + \"static/media/arrow_up.0830a7c6.png\";","export default __webpack_public_path__ + \"static/media/arrow_up_active.4bd3604e.png\";","import React from 'react';\r\n\r\nimport CovidSummary from './CovidSummary';\r\nimport CovidPie from './CovidPie';\r\nimport DailyCovid from './DailyCovid';\r\nimport CovidGraph from './CovidGraph';\r\nimport CovidTable from './CovidTable';\r\n\r\nlet dailyData = [ //get from firebase\r\n\t{\r\n\t\tDeaths: 15791,\r\n\t\tConfirmed: 670392,\r\n\t\tRecovered: 517882,\r\n\t\tDate: Date.parse('06 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tDeaths: 9534,\r\n\t\tConfirmed: 586318,\r\n\t\tRecovered: 470722,\r\n\t\tDate: Date.parse('07 Jan 2021 00:00:00 GMT'),\r\n\t}, {\r\n\t\tDeaths: 9265,\r\n\t\tConfirmed: 639061,\r\n\t\tRecovered: 343798,\r\n\t\tDate:  Date.parse('08 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tDeaths: 12820,\r\n\t\tConfirmed: 761531,\r\n\t\tRecovered: 469297,\r\n\t\tDate: Date.parse('09 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tDeaths: 15028,\r\n\t\tConfirmed: 839312,\r\n\t\tRecovered: 413558,\r\n\t\tDate: Date.parse('10 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tDeaths: 14884,\r\n\t\tConfirmed: 833433,\r\n\t\tRecovered: 469222,\r\n\t\tDate: Date.parse('11 Jan 2021 00:00:00 GMT')\r\n\t}, {\r\n\t\tDeaths: 14844,\r\n\t\tConfirmed: 808271,\r\n\t\tRecovered: 527852,\r\n\t\tDate: Date.parse('12 Jan 2021 00:00:00 GMT')\r\n\t}\r\n].reverse(); dailyData.json = () => dailyData;\r\n//DailyCovid and Covid graph need worldwide data, couldn't get it easily from API\r\n\r\nexport default class HomePage extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home page\">\r\n                <CovidSummary title=\"Coronavirus Summary Worldwide\" load={() => fetch('https://api.covid19api.com/summary')} extract={(resp) => resp.Global}/>\r\n\r\n                <CovidPie title=\"Coronavirus Cases Distribution Worldwide\" name=\"worldwide\" load={() => fetch(\"https://api.covid19api.com/summary\")} extract={resp => {\r\n                    return [\r\n                        {label: \"Dead Cases\", count: resp.Global.TotalDeaths},\r\n                        {label: \"Recovered Cases\", count: resp.Global.TotalRecovered},\r\n                        {label: \"Active Cases\", count: resp.Global.TotalConfirmed - resp.Global.TotalRecovered}\r\n                    ];\r\n                }}/>\r\n\r\n                <DailyCovid title=\"Daily Coronavirus Cases in France\" name=\"worldwide\" load={() => fetch(\"https://api.covid19api.com/total/country/france\")} extract={resp => {\r\n                    resp = resp.slice(-8);\r\n                    for ( let i = 7; i >= 1; i-- ) {\r\n                        resp[i].Deaths -= resp[i-1].Deaths;\r\n                        resp[i].Confirmed -= resp[i-1].Confirmed;\r\n                        resp[i].Recovered -= resp[i-1].Recovered;\r\n                    }\r\n                    return resp.slice(-7);\r\n                }}/>\r\n                <CovidGraph title=\"Total Coronavirus Cases in France\" name=\"france\" load={() => fetch(\"https://api.covid19api.com/total/country/france\")} extract={resp => {\r\n                    return resp;\r\n                }} />\r\n                <CovidTable title=\"Coronavirus Cases By Country\" load={() => fetch('https://api.covid19api.com/summary')} extract={resp => resp.Countries.sort(x => x.Country)}></CovidTable>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport CovidSummary from './CovidSummary';\r\nimport CovidPie from './CovidPie';\r\nimport DailyCovid from './DailyCovid';\r\nimport CovidGraph from './CovidGraph';\r\n\r\nexport default class CountryPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    countryName(name) {\r\n        return name.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\r\n    }\r\n\r\n    render() {\r\n        let country = this.props.match.params.country;\r\n        console.log(country)\r\n        return (\r\n            <div class=\"country page\">\r\n                <CovidSummary title={\"Coronavirus Summary In \" + this.countryName(country)} load={() => fetch('https://api.covid19api.com/summary')} extract={(resp) => {\r\n                    let countries = resp.Countries;\r\n                    for ( var i = 0; i < countries.length; i++ )\r\n                        if ( countries[i].Slug == country )\r\n                            break;\r\n                    \r\n                    if ( i == countries.Slug )\r\n                        return null; //won't render\r\n                    return countries[i];\r\n                }}/>\r\n\r\n                <CovidPie title={\"Coronavirus Cases Distribution In \" + this.countryName(country)} name={country} load={() => fetch(\"https://api.covid19api.com/summary\")} extract={resp => {\r\n                    let countries = resp.Countries;\r\n                    for ( var i = 0; i < countries.length; i++ )\r\n                        if ( countries[i].Slug == country )\r\n                            break;\r\n                    \r\n                    if ( i == countries.Slug )\r\n                        return null; //won't render\r\n\r\n                    console.log(countries[i]);\r\n                    return [\r\n                        {label: \"Dead Cases\", count: countries[i].TotalDeaths},\r\n                        {label: \"Recovered Cases\", count: countries[i].TotalRecovered},\r\n                        {label: \"Active Cases\", count: countries[i].TotalConfirmed - countries[i].TotalRecovered}\r\n                    ];\r\n                }}/>\r\n\r\n                <DailyCovid title={\"Daily Coronavirus Cases In \" + this.countryName(country)} name={country} load={() => fetch(\"https://api.covid19api.com/total/country/\" + country)} extract={resp => {\r\n                    resp = resp.slice(-8);\r\n                    for ( let i = 7; i >= 1; i-- ) {\r\n                        resp[i].Deaths -= resp[i-1].Deaths;\r\n                        resp[i].Confirmed -= resp[i-1].Confirmed;\r\n                        resp[i].Recovered -= resp[i-1].Recovered;\r\n                    }\r\n                    return resp.slice(-7);\r\n                }}/>\r\n\r\n                <CovidGraph title={\"Total Coronavirus Cases In \" + this.countryName(country)} name=\"france\" load={() => fetch(\"https://api.covid19api.com/total/country/\" + country)} extract={resp => {\r\n                    return resp;\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nlet firebaseConfig = {\r\n    apiKey: \"AIzaSyAs01KxIKMcQrzMPbNqTX1S8zaw3TE1Trw\",\r\n    authDomain: \"covid19-61b4b.firebaseapp.com\",\r\n    databaseURL: \"https://covid19-61b4b-default-rtdb.firebaseio.com\",\r\n    projectId: \"covid19-61b4b\",\r\n    storageBucket: \"covid19-61b4b.appspot.com\",\r\n    messagingSenderId: \"956274563181\",\r\n    appId: \"1:956274563181:web:869eaa24ab56a8e3f24764\",\r\n    measurementId: \"G-KFJMH452QE\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Route, BrowserRouter as Router, Switch} from 'react-router-dom';\n\nimport './index.css';\nimport HomePage from './components/Homepage';\nimport CountryPage from './components/CountryPage';\n\nimport firebase from './firebase';\nlet firestore = firebase.firestore();\nlet ref = firestore.collection('countries');\n\nlet timeInterval = (t) => new Promise((res, rej) => setTimeout(_ => res(), t));\n\nReactDOM.render(\n  <Router>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/:country\" component={CountryPage}/>\n\t\t\t<Route path=\"/\" component={HomePage}/>\n\t\t</Switch> \n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}